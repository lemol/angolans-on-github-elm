-- Do not manually edit this file, it was auto-generated by dillonkearns/elm-graphql
-- https://github.com/dillonkearns/elm-graphql


module Github.Object.SecurityAdvisory exposing (..)

import Github.Enum.SecurityAdvisoryEcosystem
import Github.Enum.SecurityAdvisorySeverity
import Github.InputObject
import Github.Interface
import Github.Object
import Github.Scalar
import Github.ScalarCodecs
import Github.Union
import Graphql.Internal.Builder.Argument as Argument exposing (Argument)
import Graphql.Internal.Builder.Object as Object
import Graphql.Internal.Encode as Encode exposing (Value)
import Graphql.Operation exposing (RootMutation, RootQuery, RootSubscription)
import Graphql.OptionalArgument exposing (OptionalArgument(..))
import Graphql.SelectionSet exposing (SelectionSet)
import Json.Decode as Decode


{-| Identifies the primary key from the database.
-}
databaseId : SelectionSet (Maybe Int) Github.Object.SecurityAdvisory
databaseId =
    Object.selectionForField "(Maybe Int)" "databaseId" [] (Decode.int |> Decode.nullable)


{-| This is a long plaintext description of the advisory
-}
description : SelectionSet String Github.Object.SecurityAdvisory
description =
    Object.selectionForField "String" "description" [] Decode.string


{-| The GitHub Security Advisory ID
-}
ghsaId : SelectionSet String Github.Object.SecurityAdvisory
ghsaId =
    Object.selectionForField "String" "ghsaId" [] Decode.string


{-| -}
id : SelectionSet Github.ScalarCodecs.Id Github.Object.SecurityAdvisory
id =
    Object.selectionForField "ScalarCodecs.Id" "id" [] (Github.ScalarCodecs.codecs |> Github.Scalar.unwrapCodecs |> .codecId |> .decoder)


{-| A list of identifiers for this advisory
-}
identifiers : SelectionSet decodesTo Github.Object.SecurityAdvisoryIdentifier -> SelectionSet (List decodesTo) Github.Object.SecurityAdvisory
identifiers object_ =
    Object.selectionForCompositeField "identifiers" [] object_ (identity >> Decode.list)


{-| The organization that originated the advisory
-}
origin : SelectionSet String Github.Object.SecurityAdvisory
origin =
    Object.selectionForField "String" "origin" [] Decode.string


{-| When the advisory was published
-}
publishedAt : SelectionSet Github.ScalarCodecs.DateTime Github.Object.SecurityAdvisory
publishedAt =
    Object.selectionForField "ScalarCodecs.DateTime" "publishedAt" [] (Github.ScalarCodecs.codecs |> Github.Scalar.unwrapCodecs |> .codecDateTime |> .decoder)


{-| A list of references for this advisory
-}
references : SelectionSet decodesTo Github.Object.SecurityAdvisoryReference -> SelectionSet (List decodesTo) Github.Object.SecurityAdvisory
references object_ =
    Object.selectionForCompositeField "references" [] object_ (identity >> Decode.list)


{-| The severity of the advisory
-}
severity : SelectionSet Github.Enum.SecurityAdvisorySeverity.SecurityAdvisorySeverity Github.Object.SecurityAdvisory
severity =
    Object.selectionForField "Enum.SecurityAdvisorySeverity.SecurityAdvisorySeverity" "severity" [] Github.Enum.SecurityAdvisorySeverity.decoder


{-| A short plaintext summary of the advisory
-}
summary : SelectionSet String Github.Object.SecurityAdvisory
summary =
    Object.selectionForField "String" "summary" [] Decode.string


{-| When the advisory was last updated
-}
updatedAt : SelectionSet Github.ScalarCodecs.DateTime Github.Object.SecurityAdvisory
updatedAt =
    Object.selectionForField "ScalarCodecs.DateTime" "updatedAt" [] (Github.ScalarCodecs.codecs |> Github.Scalar.unwrapCodecs |> .codecDateTime |> .decoder)


type alias VulnerabilitiesOptionalArguments =
    { after : OptionalArgument String
    , before : OptionalArgument String
    , ecosystem : OptionalArgument Github.Enum.SecurityAdvisoryEcosystem.SecurityAdvisoryEcosystem
    , first : OptionalArgument Int
    , last : OptionalArgument Int
    , orderBy : OptionalArgument Github.InputObject.SecurityVulnerabilityOrder
    , package : OptionalArgument String
    , severities : OptionalArgument (List Github.Enum.SecurityAdvisorySeverity.SecurityAdvisorySeverity)
    }


{-| Vulnerabilities associated with this Advisory

  - after - Returns the elements in the list that come after the specified cursor.
  - before - Returns the elements in the list that come before the specified cursor.
  - ecosystem - An ecosystem to filter vulnerabilities by.
  - first - Returns the first _n_ elements from the list.
  - last - Returns the last _n_ elements from the list.
  - orderBy - Ordering options for the returned topics.
  - package - A package name to filter vulnerabilities by.
  - severities - A list of severities to filter vulnerabilities by.

-}
vulnerabilities : (VulnerabilitiesOptionalArguments -> VulnerabilitiesOptionalArguments) -> SelectionSet decodesTo Github.Object.SecurityVulnerabilityConnection -> SelectionSet decodesTo Github.Object.SecurityAdvisory
vulnerabilities fillInOptionals object_ =
    let
        filledInOptionals =
            fillInOptionals { after = Absent, before = Absent, ecosystem = Absent, first = Absent, last = Absent, orderBy = Absent, package = Absent, severities = Absent }

        optionalArgs =
            [ Argument.optional "after" filledInOptionals.after Encode.string, Argument.optional "before" filledInOptionals.before Encode.string, Argument.optional "ecosystem" filledInOptionals.ecosystem (Encode.enum Github.Enum.SecurityAdvisoryEcosystem.toString), Argument.optional "first" filledInOptionals.first Encode.int, Argument.optional "last" filledInOptionals.last Encode.int, Argument.optional "orderBy" filledInOptionals.orderBy Github.InputObject.encodeSecurityVulnerabilityOrder, Argument.optional "package" filledInOptionals.package Encode.string, Argument.optional "severities" filledInOptionals.severities (Encode.enum Github.Enum.SecurityAdvisorySeverity.toString |> Encode.list) ]
                |> List.filterMap identity
    in
    Object.selectionForCompositeField "vulnerabilities" optionalArgs object_ identity


{-| When the advisory was withdrawn, if it has been withdrawn
-}
withdrawnAt : SelectionSet (Maybe Github.ScalarCodecs.DateTime) Github.Object.SecurityAdvisory
withdrawnAt =
    Object.selectionForField "(Maybe ScalarCodecs.DateTime)" "withdrawnAt" [] (Github.ScalarCodecs.codecs |> Github.Scalar.unwrapCodecs |> .codecDateTime |> .decoder |> Decode.nullable)
