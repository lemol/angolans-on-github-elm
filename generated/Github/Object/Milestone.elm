-- Do not manually edit this file, it was auto-generated by dillonkearns/elm-graphql
-- https://github.com/dillonkearns/elm-graphql


module Github.Object.Milestone exposing (..)

import Github.Enum.IssueState
import Github.Enum.MilestoneState
import Github.Enum.PullRequestState
import Github.InputObject
import Github.Interface
import Github.Object
import Github.Scalar
import Github.ScalarCodecs
import Github.Union
import Graphql.Internal.Builder.Argument as Argument exposing (Argument)
import Graphql.Internal.Builder.Object as Object
import Graphql.Internal.Encode as Encode exposing (Value)
import Graphql.Operation exposing (RootMutation, RootQuery, RootSubscription)
import Graphql.OptionalArgument exposing (OptionalArgument(..))
import Graphql.SelectionSet exposing (SelectionSet)
import Json.Decode as Decode


{-| `true` if the object is closed (definition of closed may depend on type)
-}
closed : SelectionSet Bool Github.Object.Milestone
closed =
    Object.selectionForField "Bool" "closed" [] Decode.bool


{-| Identifies the date and time when the object was closed.
-}
closedAt : SelectionSet (Maybe Github.ScalarCodecs.DateTime) Github.Object.Milestone
closedAt =
    Object.selectionForField "(Maybe ScalarCodecs.DateTime)" "closedAt" [] (Github.ScalarCodecs.codecs |> Github.Scalar.unwrapCodecs |> .codecDateTime |> .decoder |> Decode.nullable)


{-| Identifies the date and time when the object was created.
-}
createdAt : SelectionSet Github.ScalarCodecs.DateTime Github.Object.Milestone
createdAt =
    Object.selectionForField "ScalarCodecs.DateTime" "createdAt" [] (Github.ScalarCodecs.codecs |> Github.Scalar.unwrapCodecs |> .codecDateTime |> .decoder)


{-| Identifies the actor who created the milestone.
-}
creator : SelectionSet decodesTo Github.Interface.Actor -> SelectionSet (Maybe decodesTo) Github.Object.Milestone
creator object_ =
    Object.selectionForCompositeField "creator" [] object_ (identity >> Decode.nullable)


{-| Identifies the description of the milestone.
-}
description : SelectionSet (Maybe String) Github.Object.Milestone
description =
    Object.selectionForField "(Maybe String)" "description" [] (Decode.string |> Decode.nullable)


{-| Identifies the due date of the milestone.
-}
dueOn : SelectionSet (Maybe Github.ScalarCodecs.DateTime) Github.Object.Milestone
dueOn =
    Object.selectionForField "(Maybe ScalarCodecs.DateTime)" "dueOn" [] (Github.ScalarCodecs.codecs |> Github.Scalar.unwrapCodecs |> .codecDateTime |> .decoder |> Decode.nullable)


{-| -}
id : SelectionSet Github.ScalarCodecs.Id Github.Object.Milestone
id =
    Object.selectionForField "ScalarCodecs.Id" "id" [] (Github.ScalarCodecs.codecs |> Github.Scalar.unwrapCodecs |> .codecId |> .decoder)


{-| Just for debugging on review-lab
-}
issuePrioritiesDebug : SelectionSet String Github.Object.Milestone
issuePrioritiesDebug =
    Object.selectionForField "String" "issuePrioritiesDebug" [] Decode.string


type alias IssuesOptionalArguments =
    { after : OptionalArgument String
    , before : OptionalArgument String
    , filterBy : OptionalArgument Github.InputObject.IssueFilters
    , first : OptionalArgument Int
    , labels : OptionalArgument (List String)
    , last : OptionalArgument Int
    , orderBy : OptionalArgument Github.InputObject.IssueOrder
    , states : OptionalArgument (List Github.Enum.IssueState.IssueState)
    }


{-| A list of issues associated with the milestone.

  - after - Returns the elements in the list that come after the specified cursor.
  - before - Returns the elements in the list that come before the specified cursor.
  - filterBy - Filtering options for issues returned from the connection.
  - first - Returns the first _n_ elements from the list.
  - labels - A list of label names to filter the pull requests by.
  - last - Returns the last _n_ elements from the list.
  - orderBy - Ordering options for issues returned from the connection.
  - states - A list of states to filter the issues by.

-}
issues : (IssuesOptionalArguments -> IssuesOptionalArguments) -> SelectionSet decodesTo Github.Object.IssueConnection -> SelectionSet decodesTo Github.Object.Milestone
issues fillInOptionals object_ =
    let
        filledInOptionals =
            fillInOptionals { after = Absent, before = Absent, filterBy = Absent, first = Absent, labels = Absent, last = Absent, orderBy = Absent, states = Absent }

        optionalArgs =
            [ Argument.optional "after" filledInOptionals.after Encode.string, Argument.optional "before" filledInOptionals.before Encode.string, Argument.optional "filterBy" filledInOptionals.filterBy Github.InputObject.encodeIssueFilters, Argument.optional "first" filledInOptionals.first Encode.int, Argument.optional "labels" filledInOptionals.labels (Encode.string |> Encode.list), Argument.optional "last" filledInOptionals.last Encode.int, Argument.optional "orderBy" filledInOptionals.orderBy Github.InputObject.encodeIssueOrder, Argument.optional "states" filledInOptionals.states (Encode.enum Github.Enum.IssueState.toString |> Encode.list) ]
                |> List.filterMap identity
    in
    Object.selectionForCompositeField "issues" optionalArgs object_ identity


{-| Identifies the number of the milestone.
-}
number : SelectionSet Int Github.Object.Milestone
number =
    Object.selectionForField "Int" "number" [] Decode.int


type alias PullRequestsOptionalArguments =
    { after : OptionalArgument String
    , baseRefName : OptionalArgument String
    , before : OptionalArgument String
    , first : OptionalArgument Int
    , headRefName : OptionalArgument String
    , labels : OptionalArgument (List String)
    , last : OptionalArgument Int
    , orderBy : OptionalArgument Github.InputObject.IssueOrder
    , states : OptionalArgument (List Github.Enum.PullRequestState.PullRequestState)
    }


{-| A list of pull requests associated with the milestone.

  - after - Returns the elements in the list that come after the specified cursor.
  - baseRefName - The base ref name to filter the pull requests by.
  - before - Returns the elements in the list that come before the specified cursor.
  - first - Returns the first _n_ elements from the list.
  - headRefName - The head ref name to filter the pull requests by.
  - labels - A list of label names to filter the pull requests by.
  - last - Returns the last _n_ elements from the list.
  - orderBy - Ordering options for pull requests returned from the connection.
  - states - A list of states to filter the pull requests by.

-}
pullRequests : (PullRequestsOptionalArguments -> PullRequestsOptionalArguments) -> SelectionSet decodesTo Github.Object.PullRequestConnection -> SelectionSet decodesTo Github.Object.Milestone
pullRequests fillInOptionals object_ =
    let
        filledInOptionals =
            fillInOptionals { after = Absent, baseRefName = Absent, before = Absent, first = Absent, headRefName = Absent, labels = Absent, last = Absent, orderBy = Absent, states = Absent }

        optionalArgs =
            [ Argument.optional "after" filledInOptionals.after Encode.string, Argument.optional "baseRefName" filledInOptionals.baseRefName Encode.string, Argument.optional "before" filledInOptionals.before Encode.string, Argument.optional "first" filledInOptionals.first Encode.int, Argument.optional "headRefName" filledInOptionals.headRefName Encode.string, Argument.optional "labels" filledInOptionals.labels (Encode.string |> Encode.list), Argument.optional "last" filledInOptionals.last Encode.int, Argument.optional "orderBy" filledInOptionals.orderBy Github.InputObject.encodeIssueOrder, Argument.optional "states" filledInOptionals.states (Encode.enum Github.Enum.PullRequestState.toString |> Encode.list) ]
                |> List.filterMap identity
    in
    Object.selectionForCompositeField "pullRequests" optionalArgs object_ identity


{-| The repository associated with this milestone.
-}
repository : SelectionSet decodesTo Github.Object.Repository -> SelectionSet decodesTo Github.Object.Milestone
repository object_ =
    Object.selectionForCompositeField "repository" [] object_ identity


{-| The HTTP path for this milestone
-}
resourcePath : SelectionSet Github.ScalarCodecs.Uri Github.Object.Milestone
resourcePath =
    Object.selectionForField "ScalarCodecs.Uri" "resourcePath" [] (Github.ScalarCodecs.codecs |> Github.Scalar.unwrapCodecs |> .codecUri |> .decoder)


{-| Identifies the state of the milestone.
-}
state : SelectionSet Github.Enum.MilestoneState.MilestoneState Github.Object.Milestone
state =
    Object.selectionForField "Enum.MilestoneState.MilestoneState" "state" [] Github.Enum.MilestoneState.decoder


{-| Identifies the title of the milestone.
-}
title : SelectionSet String Github.Object.Milestone
title =
    Object.selectionForField "String" "title" [] Decode.string


{-| Identifies the date and time when the object was last updated.
-}
updatedAt : SelectionSet Github.ScalarCodecs.DateTime Github.Object.Milestone
updatedAt =
    Object.selectionForField "ScalarCodecs.DateTime" "updatedAt" [] (Github.ScalarCodecs.codecs |> Github.Scalar.unwrapCodecs |> .codecDateTime |> .decoder)


{-| The HTTP URL for this milestone
-}
url : SelectionSet Github.ScalarCodecs.Uri Github.Object.Milestone
url =
    Object.selectionForField "ScalarCodecs.Uri" "url" [] (Github.ScalarCodecs.codecs |> Github.Scalar.unwrapCodecs |> .codecUri |> .decoder)
