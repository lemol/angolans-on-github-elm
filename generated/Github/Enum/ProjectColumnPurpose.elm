-- Do not manually edit this file, it was auto-generated by dillonkearns/elm-graphql
-- https://github.com/dillonkearns/elm-graphql


module Github.Enum.ProjectColumnPurpose exposing (..)

import Json.Decode as Decode exposing (Decoder)


{-| The semantic purpose of the column - todo, in progress, or done.

  - Done - The column contains cards which are complete
  - InProgress - The column contains cards which are currently being worked on
  - Todo - The column contains cards still to be worked on

-}
type ProjectColumnPurpose
    = Done
    | InProgress
    | Todo


list : List ProjectColumnPurpose
list =
    [ Done, InProgress, Todo ]


decoder : Decoder ProjectColumnPurpose
decoder =
    Decode.string
        |> Decode.andThen
            (\string ->
                case string of
                    "DONE" ->
                        Decode.succeed Done

                    "IN_PROGRESS" ->
                        Decode.succeed InProgress

                    "TODO" ->
                        Decode.succeed Todo

                    _ ->
                        Decode.fail ("Invalid ProjectColumnPurpose type, " ++ string ++ " try re-running the @dillonkearns/elm-graphql CLI ")
            )


{-| Convert from the union type representating the Enum to a string that the GraphQL server will recognize.
-}
toString : ProjectColumnPurpose -> String
toString enum =
    case enum of
        Done ->
            "DONE"

        InProgress ->
            "IN_PROGRESS"

        Todo ->
            "TODO"


{-| Convert from a String representation to an elm representation enum.
This is the inverse of the Enum `toString` function. So you can call `toString` and then convert back `fromString` safely.

    Swapi.Enum.Episode.NewHope
        |> Swapi.Enum.Episode.toString
        |> Swapi.Enum.Episode.fromString
        == Just NewHope

This can be useful for generating Strings to use for <select> menus to check which item was selected.

-}
fromString : String -> Maybe ProjectColumnPurpose
fromString enumString =
    case enumString of
        "DONE" ->
            Just Done

        "IN_PROGRESS" ->
            Just InProgress

        "TODO" ->
            Just Todo

        _ ->
            Nothing
