-- Do not manually edit this file, it was auto-generated by dillonkearns/elm-graphql
-- https://github.com/dillonkearns/elm-graphql


module Github.Enum.LockReason exposing (..)

import Json.Decode as Decode exposing (Decoder)


{-| The possible reasons that an issue or pull request was locked.

  - OffTopic - The issue or pull request was locked because the conversation was off-topic.
  - Resolved - The issue or pull request was locked because the conversation was resolved.
  - Spam - The issue or pull request was locked because the conversation was spam.
  - TooHeated - The issue or pull request was locked because the conversation was too heated.

-}
type LockReason
    = OffTopic
    | Resolved
    | Spam
    | TooHeated


list : List LockReason
list =
    [ OffTopic, Resolved, Spam, TooHeated ]


decoder : Decoder LockReason
decoder =
    Decode.string
        |> Decode.andThen
            (\string ->
                case string of
                    "OFF_TOPIC" ->
                        Decode.succeed OffTopic

                    "RESOLVED" ->
                        Decode.succeed Resolved

                    "SPAM" ->
                        Decode.succeed Spam

                    "TOO_HEATED" ->
                        Decode.succeed TooHeated

                    _ ->
                        Decode.fail ("Invalid LockReason type, " ++ string ++ " try re-running the @dillonkearns/elm-graphql CLI ")
            )


{-| Convert from the union type representating the Enum to a string that the GraphQL server will recognize.
-}
toString : LockReason -> String
toString enum =
    case enum of
        OffTopic ->
            "OFF_TOPIC"

        Resolved ->
            "RESOLVED"

        Spam ->
            "SPAM"

        TooHeated ->
            "TOO_HEATED"


{-| Convert from a String representation to an elm representation enum.
This is the inverse of the Enum `toString` function. So you can call `toString` and then convert back `fromString` safely.

    Swapi.Enum.Episode.NewHope
        |> Swapi.Enum.Episode.toString
        |> Swapi.Enum.Episode.fromString
        == Just NewHope

This can be useful for generating Strings to use for <select> menus to check which item was selected.

-}
fromString : String -> Maybe LockReason
fromString enumString =
    case enumString of
        "OFF_TOPIC" ->
            Just OffTopic

        "RESOLVED" ->
            Just Resolved

        "SPAM" ->
            Just Spam

        "TOO_HEATED" ->
            Just TooHeated

        _ ->
            Nothing
