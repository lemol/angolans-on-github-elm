-- Do not manually edit this file, it was auto-generated by dillonkearns/elm-graphql
-- https://github.com/dillonkearns/elm-graphql


module Github.Enum.GitSignatureState exposing (..)

import Json.Decode as Decode exposing (Decoder)


{-| The state of a Git signature.

  - BadCert - The signing certificate or its chain could not be verified
  - BadEmail - Invalid email used for signing
  - ExpiredKey - Signing key expired
  - GpgverifyError - Internal error - the GPG verification service misbehaved
  - GpgverifyUnavailable - Internal error - the GPG verification service is unavailable at the moment
  - Invalid - Invalid signature
  - MalformedSig - Malformed signature
  - NotSigningKey - The usage flags for the key that signed this don't allow signing
  - NoUser - Email used for signing not known to GitHub
  - OcspError - Valid siganture, though certificate revocation check failed
  - OcspPending - Valid signature, pending certificate revocation checking
  - OcspRevoked - One or more certificates in chain has been revoked
  - UnknownKey - Key used for signing not known to GitHub
  - UnknownSigType - Unknown signature type
  - Unsigned - Unsigned
  - UnverifiedEmail - Email used for signing unverified on GitHub
  - Valid - Valid signature and verified by GitHub

-}
type GitSignatureState
    = BadCert
    | BadEmail
    | ExpiredKey
    | GpgverifyError
    | GpgverifyUnavailable
    | Invalid
    | MalformedSig
    | NotSigningKey
    | NoUser
    | OcspError
    | OcspPending
    | OcspRevoked
    | UnknownKey
    | UnknownSigType
    | Unsigned
    | UnverifiedEmail
    | Valid


list : List GitSignatureState
list =
    [ BadCert, BadEmail, ExpiredKey, GpgverifyError, GpgverifyUnavailable, Invalid, MalformedSig, NotSigningKey, NoUser, OcspError, OcspPending, OcspRevoked, UnknownKey, UnknownSigType, Unsigned, UnverifiedEmail, Valid ]


decoder : Decoder GitSignatureState
decoder =
    Decode.string
        |> Decode.andThen
            (\string ->
                case string of
                    "BAD_CERT" ->
                        Decode.succeed BadCert

                    "BAD_EMAIL" ->
                        Decode.succeed BadEmail

                    "EXPIRED_KEY" ->
                        Decode.succeed ExpiredKey

                    "GPGVERIFY_ERROR" ->
                        Decode.succeed GpgverifyError

                    "GPGVERIFY_UNAVAILABLE" ->
                        Decode.succeed GpgverifyUnavailable

                    "INVALID" ->
                        Decode.succeed Invalid

                    "MALFORMED_SIG" ->
                        Decode.succeed MalformedSig

                    "NOT_SIGNING_KEY" ->
                        Decode.succeed NotSigningKey

                    "NO_USER" ->
                        Decode.succeed NoUser

                    "OCSP_ERROR" ->
                        Decode.succeed OcspError

                    "OCSP_PENDING" ->
                        Decode.succeed OcspPending

                    "OCSP_REVOKED" ->
                        Decode.succeed OcspRevoked

                    "UNKNOWN_KEY" ->
                        Decode.succeed UnknownKey

                    "UNKNOWN_SIG_TYPE" ->
                        Decode.succeed UnknownSigType

                    "UNSIGNED" ->
                        Decode.succeed Unsigned

                    "UNVERIFIED_EMAIL" ->
                        Decode.succeed UnverifiedEmail

                    "VALID" ->
                        Decode.succeed Valid

                    _ ->
                        Decode.fail ("Invalid GitSignatureState type, " ++ string ++ " try re-running the @dillonkearns/elm-graphql CLI ")
            )


{-| Convert from the union type representating the Enum to a string that the GraphQL server will recognize.
-}
toString : GitSignatureState -> String
toString enum =
    case enum of
        BadCert ->
            "BAD_CERT"

        BadEmail ->
            "BAD_EMAIL"

        ExpiredKey ->
            "EXPIRED_KEY"

        GpgverifyError ->
            "GPGVERIFY_ERROR"

        GpgverifyUnavailable ->
            "GPGVERIFY_UNAVAILABLE"

        Invalid ->
            "INVALID"

        MalformedSig ->
            "MALFORMED_SIG"

        NotSigningKey ->
            "NOT_SIGNING_KEY"

        NoUser ->
            "NO_USER"

        OcspError ->
            "OCSP_ERROR"

        OcspPending ->
            "OCSP_PENDING"

        OcspRevoked ->
            "OCSP_REVOKED"

        UnknownKey ->
            "UNKNOWN_KEY"

        UnknownSigType ->
            "UNKNOWN_SIG_TYPE"

        Unsigned ->
            "UNSIGNED"

        UnverifiedEmail ->
            "UNVERIFIED_EMAIL"

        Valid ->
            "VALID"


{-| Convert from a String representation to an elm representation enum.
This is the inverse of the Enum `toString` function. So you can call `toString` and then convert back `fromString` safely.

    Swapi.Enum.Episode.NewHope
        |> Swapi.Enum.Episode.toString
        |> Swapi.Enum.Episode.fromString
        == Just NewHope

This can be useful for generating Strings to use for <select> menus to check which item was selected.

-}
fromString : String -> Maybe GitSignatureState
fromString enumString =
    case enumString of
        "BAD_CERT" ->
            Just BadCert

        "BAD_EMAIL" ->
            Just BadEmail

        "EXPIRED_KEY" ->
            Just ExpiredKey

        "GPGVERIFY_ERROR" ->
            Just GpgverifyError

        "GPGVERIFY_UNAVAILABLE" ->
            Just GpgverifyUnavailable

        "INVALID" ->
            Just Invalid

        "MALFORMED_SIG" ->
            Just MalformedSig

        "NOT_SIGNING_KEY" ->
            Just NotSigningKey

        "NO_USER" ->
            Just NoUser

        "OCSP_ERROR" ->
            Just OcspError

        "OCSP_PENDING" ->
            Just OcspPending

        "OCSP_REVOKED" ->
            Just OcspRevoked

        "UNKNOWN_KEY" ->
            Just UnknownKey

        "UNKNOWN_SIG_TYPE" ->
            Just UnknownSigType

        "UNSIGNED" ->
            Just Unsigned

        "UNVERIFIED_EMAIL" ->
            Just UnverifiedEmail

        "VALID" ->
            Just Valid

        _ ->
            Nothing
