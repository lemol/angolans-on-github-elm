-- Do not manually edit this file, it was auto-generated by dillonkearns/elm-graphql
-- https://github.com/dillonkearns/elm-graphql


module Github.Enum.OrgRemoveOutsideCollaboratorAuditEntryReason exposing (..)

import Json.Decode as Decode exposing (Decoder)


{-| The reason an outside collaborator was removed from an Organization.

  - SamlExternalIdentityMissing - SAML external identity missing
  - TwoFactorRequirementNonCompliance - The organization required 2FA of its billing managers and this user did not have 2FA enabled.

-}
type OrgRemoveOutsideCollaboratorAuditEntryReason
    = SamlExternalIdentityMissing
    | TwoFactorRequirementNonCompliance


list : List OrgRemoveOutsideCollaboratorAuditEntryReason
list =
    [ SamlExternalIdentityMissing, TwoFactorRequirementNonCompliance ]


decoder : Decoder OrgRemoveOutsideCollaboratorAuditEntryReason
decoder =
    Decode.string
        |> Decode.andThen
            (\string ->
                case string of
                    "SAML_EXTERNAL_IDENTITY_MISSING" ->
                        Decode.succeed SamlExternalIdentityMissing

                    "TWO_FACTOR_REQUIREMENT_NON_COMPLIANCE" ->
                        Decode.succeed TwoFactorRequirementNonCompliance

                    _ ->
                        Decode.fail ("Invalid OrgRemoveOutsideCollaboratorAuditEntryReason type, " ++ string ++ " try re-running the @dillonkearns/elm-graphql CLI ")
            )


{-| Convert from the union type representating the Enum to a string that the GraphQL server will recognize.
-}
toString : OrgRemoveOutsideCollaboratorAuditEntryReason -> String
toString enum =
    case enum of
        SamlExternalIdentityMissing ->
            "SAML_EXTERNAL_IDENTITY_MISSING"

        TwoFactorRequirementNonCompliance ->
            "TWO_FACTOR_REQUIREMENT_NON_COMPLIANCE"


{-| Convert from a String representation to an elm representation enum.
This is the inverse of the Enum `toString` function. So you can call `toString` and then convert back `fromString` safely.

    Swapi.Enum.Episode.NewHope
        |> Swapi.Enum.Episode.toString
        |> Swapi.Enum.Episode.fromString
        == Just NewHope

This can be useful for generating Strings to use for <select> menus to check which item was selected.

-}
fromString : String -> Maybe OrgRemoveOutsideCollaboratorAuditEntryReason
fromString enumString =
    case enumString of
        "SAML_EXTERNAL_IDENTITY_MISSING" ->
            Just SamlExternalIdentityMissing

        "TWO_FACTOR_REQUIREMENT_NON_COMPLIANCE" ->
            Just TwoFactorRequirementNonCompliance

        _ ->
            Nothing
