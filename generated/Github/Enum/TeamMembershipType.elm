-- Do not manually edit this file, it was auto-generated by dillonkearns/elm-graphql
-- https://github.com/dillonkearns/elm-graphql


module Github.Enum.TeamMembershipType exposing (..)

import Json.Decode as Decode exposing (Decoder)


{-| Defines which types of team members are included in the returned list. Can be one of IMMEDIATE, CHILD\_TEAM or ALL.

  - All - Includes immediate and child team members for the team.
  - ChildTeam - Includes only child team members for the team.
  - Immediate - Includes only immediate members of the team.

-}
type TeamMembershipType
    = All
    | ChildTeam
    | Immediate


list : List TeamMembershipType
list =
    [ All, ChildTeam, Immediate ]


decoder : Decoder TeamMembershipType
decoder =
    Decode.string
        |> Decode.andThen
            (\string ->
                case string of
                    "ALL" ->
                        Decode.succeed All

                    "CHILD_TEAM" ->
                        Decode.succeed ChildTeam

                    "IMMEDIATE" ->
                        Decode.succeed Immediate

                    _ ->
                        Decode.fail ("Invalid TeamMembershipType type, " ++ string ++ " try re-running the @dillonkearns/elm-graphql CLI ")
            )


{-| Convert from the union type representating the Enum to a string that the GraphQL server will recognize.
-}
toString : TeamMembershipType -> String
toString enum =
    case enum of
        All ->
            "ALL"

        ChildTeam ->
            "CHILD_TEAM"

        Immediate ->
            "IMMEDIATE"


{-| Convert from a String representation to an elm representation enum.
This is the inverse of the Enum `toString` function. So you can call `toString` and then convert back `fromString` safely.

    Swapi.Enum.Episode.NewHope
        |> Swapi.Enum.Episode.toString
        |> Swapi.Enum.Episode.fromString
        == Just NewHope

This can be useful for generating Strings to use for <select> menus to check which item was selected.

-}
fromString : String -> Maybe TeamMembershipType
fromString enumString =
    case enumString of
        "ALL" ->
            Just All

        "CHILD_TEAM" ->
            Just ChildTeam

        "IMMEDIATE" ->
            Just Immediate

        _ ->
            Nothing
