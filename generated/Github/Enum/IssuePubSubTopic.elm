-- Do not manually edit this file, it was auto-generated by dillonkearns/elm-graphql
-- https://github.com/dillonkearns/elm-graphql


module Github.Enum.IssuePubSubTopic exposing (..)

import Json.Decode as Decode exposing (Decoder)


{-| The possible PubSub channels for an issue.

  - Markasread - The channel ID for marking an issue as read.
  - State - The channel ID for observing issue state updates.
  - Timeline - The channel ID for updating items on the issue timeline.
  - Updated - The channel ID for observing issue updates.

-}
type IssuePubSubTopic
    = Markasread
    | State
    | Timeline
    | Updated


list : List IssuePubSubTopic
list =
    [ Markasread, State, Timeline, Updated ]


decoder : Decoder IssuePubSubTopic
decoder =
    Decode.string
        |> Decode.andThen
            (\string ->
                case string of
                    "MARKASREAD" ->
                        Decode.succeed Markasread

                    "STATE" ->
                        Decode.succeed State

                    "TIMELINE" ->
                        Decode.succeed Timeline

                    "UPDATED" ->
                        Decode.succeed Updated

                    _ ->
                        Decode.fail ("Invalid IssuePubSubTopic type, " ++ string ++ " try re-running the @dillonkearns/elm-graphql CLI ")
            )


{-| Convert from the union type representating the Enum to a string that the GraphQL server will recognize.
-}
toString : IssuePubSubTopic -> String
toString enum =
    case enum of
        Markasread ->
            "MARKASREAD"

        State ->
            "STATE"

        Timeline ->
            "TIMELINE"

        Updated ->
            "UPDATED"


{-| Convert from a String representation to an elm representation enum.
This is the inverse of the Enum `toString` function. So you can call `toString` and then convert back `fromString` safely.

    Swapi.Enum.Episode.NewHope
        |> Swapi.Enum.Episode.toString
        |> Swapi.Enum.Episode.fromString
        == Just NewHope

This can be useful for generating Strings to use for <select> menus to check which item was selected.

-}
fromString : String -> Maybe IssuePubSubTopic
fromString enumString =
    case enumString of
        "MARKASREAD" ->
            Just Markasread

        "STATE" ->
            Just State

        "TIMELINE" ->
            Just Timeline

        "UPDATED" ->
            Just Updated

        _ ->
            Nothing
