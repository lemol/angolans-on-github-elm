-- Do not manually edit this file, it was auto-generated by dillonkearns/elm-graphql
-- https://github.com/dillonkearns/elm-graphql


module Github.Enum.EnterpriseMembersCanMakePurchasesSettingValue exposing (..)

import Json.Decode as Decode exposing (Decoder)


{-| The possible values for the members can make purchases setting.

  - Disabled - The setting is disabled for organizations in the enterprise.
  - Enabled - The setting is enabled for organizations in the enterprise.

-}
type EnterpriseMembersCanMakePurchasesSettingValue
    = Disabled
    | Enabled


list : List EnterpriseMembersCanMakePurchasesSettingValue
list =
    [ Disabled, Enabled ]


decoder : Decoder EnterpriseMembersCanMakePurchasesSettingValue
decoder =
    Decode.string
        |> Decode.andThen
            (\string ->
                case string of
                    "DISABLED" ->
                        Decode.succeed Disabled

                    "ENABLED" ->
                        Decode.succeed Enabled

                    _ ->
                        Decode.fail ("Invalid EnterpriseMembersCanMakePurchasesSettingValue type, " ++ string ++ " try re-running the @dillonkearns/elm-graphql CLI ")
            )


{-| Convert from the union type representating the Enum to a string that the GraphQL server will recognize.
-}
toString : EnterpriseMembersCanMakePurchasesSettingValue -> String
toString enum =
    case enum of
        Disabled ->
            "DISABLED"

        Enabled ->
            "ENABLED"


{-| Convert from a String representation to an elm representation enum.
This is the inverse of the Enum `toString` function. So you can call `toString` and then convert back `fromString` safely.

    Swapi.Enum.Episode.NewHope
        |> Swapi.Enum.Episode.toString
        |> Swapi.Enum.Episode.fromString
        == Just NewHope

This can be useful for generating Strings to use for <select> menus to check which item was selected.

-}
fromString : String -> Maybe EnterpriseMembersCanMakePurchasesSettingValue
fromString enumString =
    case enumString of
        "DISABLED" ->
            Just Disabled

        "ENABLED" ->
            Just Enabled

        _ ->
            Nothing
