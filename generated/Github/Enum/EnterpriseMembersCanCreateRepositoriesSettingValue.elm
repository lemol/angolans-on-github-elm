-- Do not manually edit this file, it was auto-generated by dillonkearns/elm-graphql
-- https://github.com/dillonkearns/elm-graphql


module Github.Enum.EnterpriseMembersCanCreateRepositoriesSettingValue exposing (..)

import Json.Decode as Decode exposing (Decoder)


{-| The possible values for the enterprise members can create repositories setting.

  - All - Members will be able to create public and private repositories.
  - Disabled - Members will not be able to create public or private repositories.
  - NoPolicy - Organization administrators choose whether to allow members to create repositories.
  - Private - Members will be able to create only private repositories.
  - Public - Members will be able to create only public repositories.

-}
type EnterpriseMembersCanCreateRepositoriesSettingValue
    = All
    | Disabled
    | NoPolicy
    | Private
    | Public


list : List EnterpriseMembersCanCreateRepositoriesSettingValue
list =
    [ All, Disabled, NoPolicy, Private, Public ]


decoder : Decoder EnterpriseMembersCanCreateRepositoriesSettingValue
decoder =
    Decode.string
        |> Decode.andThen
            (\string ->
                case string of
                    "ALL" ->
                        Decode.succeed All

                    "DISABLED" ->
                        Decode.succeed Disabled

                    "NO_POLICY" ->
                        Decode.succeed NoPolicy

                    "PRIVATE" ->
                        Decode.succeed Private

                    "PUBLIC" ->
                        Decode.succeed Public

                    _ ->
                        Decode.fail ("Invalid EnterpriseMembersCanCreateRepositoriesSettingValue type, " ++ string ++ " try re-running the @dillonkearns/elm-graphql CLI ")
            )


{-| Convert from the union type representating the Enum to a string that the GraphQL server will recognize.
-}
toString : EnterpriseMembersCanCreateRepositoriesSettingValue -> String
toString enum =
    case enum of
        All ->
            "ALL"

        Disabled ->
            "DISABLED"

        NoPolicy ->
            "NO_POLICY"

        Private ->
            "PRIVATE"

        Public ->
            "PUBLIC"


{-| Convert from a String representation to an elm representation enum.
This is the inverse of the Enum `toString` function. So you can call `toString` and then convert back `fromString` safely.

    Swapi.Enum.Episode.NewHope
        |> Swapi.Enum.Episode.toString
        |> Swapi.Enum.Episode.fromString
        == Just NewHope

This can be useful for generating Strings to use for <select> menus to check which item was selected.

-}
fromString : String -> Maybe EnterpriseMembersCanCreateRepositoriesSettingValue
fromString enumString =
    case enumString of
        "ALL" ->
            Just All

        "DISABLED" ->
            Just Disabled

        "NO_POLICY" ->
            Just NoPolicy

        "PRIVATE" ->
            Just Private

        "PUBLIC" ->
            Just Public

        _ ->
            Nothing
