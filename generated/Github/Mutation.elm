-- Do not manually edit this file, it was auto-generated by dillonkearns/elm-graphql
-- https://github.com/dillonkearns/elm-graphql


module Github.Mutation exposing (..)

import Github.InputObject
import Github.Interface
import Github.Object
import Github.Scalar
import Github.ScalarCodecs
import Github.Union
import Graphql.Internal.Builder.Argument as Argument exposing (Argument)
import Graphql.Internal.Builder.Object as Object
import Graphql.Internal.Encode as Encode exposing (Value)
import Graphql.Operation exposing (RootMutation, RootQuery, RootSubscription)
import Graphql.OptionalArgument exposing (OptionalArgument(..))
import Graphql.SelectionSet exposing (SelectionSet)
import Json.Decode as Decode exposing (Decoder)


type alias AcceptEnterpriseAdministratorInvitationRequiredArguments =
    { input : Github.InputObject.AcceptEnterpriseAdministratorInvitationInput }


{-| Accepts a pending invitation for a user to become an administrator of an enterprise.

  - input -

-}
acceptEnterpriseAdministratorInvitation : AcceptEnterpriseAdministratorInvitationRequiredArguments -> SelectionSet decodesTo Github.Object.AcceptEnterpriseAdministratorInvitationPayload -> SelectionSet (Maybe decodesTo) RootMutation
acceptEnterpriseAdministratorInvitation requiredArgs object_ =
    Object.selectionForCompositeField "acceptEnterpriseAdministratorInvitation" [ Argument.required "input" requiredArgs.input Github.InputObject.encodeAcceptEnterpriseAdministratorInvitationInput ] object_ (identity >> Decode.nullable)


type alias AcceptTopicSuggestionRequiredArguments =
    { input : Github.InputObject.AcceptTopicSuggestionInput }


{-| Applies a suggested topic to the repository.

  - input -

-}
acceptTopicSuggestion : AcceptTopicSuggestionRequiredArguments -> SelectionSet decodesTo Github.Object.AcceptTopicSuggestionPayload -> SelectionSet (Maybe decodesTo) RootMutation
acceptTopicSuggestion requiredArgs object_ =
    Object.selectionForCompositeField "acceptTopicSuggestion" [ Argument.required "input" requiredArgs.input Github.InputObject.encodeAcceptTopicSuggestionInput ] object_ (identity >> Decode.nullable)


type alias AddAssigneesToAssignableRequiredArguments =
    { input : Github.InputObject.AddAssigneesToAssignableInput }


{-| Adds assignees to an assignable object.

  - input -

-}
addAssigneesToAssignable : AddAssigneesToAssignableRequiredArguments -> SelectionSet decodesTo Github.Object.AddAssigneesToAssignablePayload -> SelectionSet (Maybe decodesTo) RootMutation
addAssigneesToAssignable requiredArgs object_ =
    Object.selectionForCompositeField "addAssigneesToAssignable" [ Argument.required "input" requiredArgs.input Github.InputObject.encodeAddAssigneesToAssignableInput ] object_ (identity >> Decode.nullable)


type alias AddCommentRequiredArguments =
    { input : Github.InputObject.AddCommentInput }


{-| Adds a comment to an Issue or Pull Request.

  - input -

-}
addComment : AddCommentRequiredArguments -> SelectionSet decodesTo Github.Object.AddCommentPayload -> SelectionSet (Maybe decodesTo) RootMutation
addComment requiredArgs object_ =
    Object.selectionForCompositeField "addComment" [ Argument.required "input" requiredArgs.input Github.InputObject.encodeAddCommentInput ] object_ (identity >> Decode.nullable)


type alias AddLabelsToLabelableRequiredArguments =
    { input : Github.InputObject.AddLabelsToLabelableInput }


{-| Adds labels to a labelable object.

  - input -

-}
addLabelsToLabelable : AddLabelsToLabelableRequiredArguments -> SelectionSet decodesTo Github.Object.AddLabelsToLabelablePayload -> SelectionSet (Maybe decodesTo) RootMutation
addLabelsToLabelable requiredArgs object_ =
    Object.selectionForCompositeField "addLabelsToLabelable" [ Argument.required "input" requiredArgs.input Github.InputObject.encodeAddLabelsToLabelableInput ] object_ (identity >> Decode.nullable)


type alias AddProjectCardRequiredArguments =
    { input : Github.InputObject.AddProjectCardInput }


{-| Adds a card to a ProjectColumn. Either `contentId` or `note` must be provided but **not** both.

  - input -

-}
addProjectCard : AddProjectCardRequiredArguments -> SelectionSet decodesTo Github.Object.AddProjectCardPayload -> SelectionSet (Maybe decodesTo) RootMutation
addProjectCard requiredArgs object_ =
    Object.selectionForCompositeField "addProjectCard" [ Argument.required "input" requiredArgs.input Github.InputObject.encodeAddProjectCardInput ] object_ (identity >> Decode.nullable)


type alias AddProjectColumnRequiredArguments =
    { input : Github.InputObject.AddProjectColumnInput }


{-| Adds a column to a Project.

  - input -

-}
addProjectColumn : AddProjectColumnRequiredArguments -> SelectionSet decodesTo Github.Object.AddProjectColumnPayload -> SelectionSet (Maybe decodesTo) RootMutation
addProjectColumn requiredArgs object_ =
    Object.selectionForCompositeField "addProjectColumn" [ Argument.required "input" requiredArgs.input Github.InputObject.encodeAddProjectColumnInput ] object_ (identity >> Decode.nullable)


type alias AddPullRequestReviewRequiredArguments =
    { input : Github.InputObject.AddPullRequestReviewInput }


{-| Adds a review to a Pull Request.

  - input -

-}
addPullRequestReview : AddPullRequestReviewRequiredArguments -> SelectionSet decodesTo Github.Object.AddPullRequestReviewPayload -> SelectionSet (Maybe decodesTo) RootMutation
addPullRequestReview requiredArgs object_ =
    Object.selectionForCompositeField "addPullRequestReview" [ Argument.required "input" requiredArgs.input Github.InputObject.encodeAddPullRequestReviewInput ] object_ (identity >> Decode.nullable)


type alias AddPullRequestReviewCommentRequiredArguments =
    { input : Github.InputObject.AddPullRequestReviewCommentInput }


{-| Adds a comment to a review.

  - input -

-}
addPullRequestReviewComment : AddPullRequestReviewCommentRequiredArguments -> SelectionSet decodesTo Github.Object.AddPullRequestReviewCommentPayload -> SelectionSet (Maybe decodesTo) RootMutation
addPullRequestReviewComment requiredArgs object_ =
    Object.selectionForCompositeField "addPullRequestReviewComment" [ Argument.required "input" requiredArgs.input Github.InputObject.encodeAddPullRequestReviewCommentInput ] object_ (identity >> Decode.nullable)


type alias AddReactionRequiredArguments =
    { input : Github.InputObject.AddReactionInput }


{-| Adds a reaction to a subject.

  - input -

-}
addReaction : AddReactionRequiredArguments -> SelectionSet decodesTo Github.Object.AddReactionPayload -> SelectionSet (Maybe decodesTo) RootMutation
addReaction requiredArgs object_ =
    Object.selectionForCompositeField "addReaction" [ Argument.required "input" requiredArgs.input Github.InputObject.encodeAddReactionInput ] object_ (identity >> Decode.nullable)


type alias AddStarRequiredArguments =
    { input : Github.InputObject.AddStarInput }


{-| Adds a star to a Starrable.

  - input -

-}
addStar : AddStarRequiredArguments -> SelectionSet decodesTo Github.Object.AddStarPayload -> SelectionSet (Maybe decodesTo) RootMutation
addStar requiredArgs object_ =
    Object.selectionForCompositeField "addStar" [ Argument.required "input" requiredArgs.input Github.InputObject.encodeAddStarInput ] object_ (identity >> Decode.nullable)


type alias ArchiveRepositoryRequiredArguments =
    { input : Github.InputObject.ArchiveRepositoryInput }


{-| Marks a repository as archived.

  - input -

-}
archiveRepository : ArchiveRepositoryRequiredArguments -> SelectionSet decodesTo Github.Object.ArchiveRepositoryPayload -> SelectionSet (Maybe decodesTo) RootMutation
archiveRepository requiredArgs object_ =
    Object.selectionForCompositeField "archiveRepository" [ Argument.required "input" requiredArgs.input Github.InputObject.encodeArchiveRepositoryInput ] object_ (identity >> Decode.nullable)


type alias CancelEnterpriseAdminInvitationRequiredArguments =
    { input : Github.InputObject.CancelEnterpriseAdminInvitationInput }


{-| Cancels a pending invitation for an administrator to join an enterprise.

  - input -

-}
cancelEnterpriseAdminInvitation : CancelEnterpriseAdminInvitationRequiredArguments -> SelectionSet decodesTo Github.Object.CancelEnterpriseAdminInvitationPayload -> SelectionSet (Maybe decodesTo) RootMutation
cancelEnterpriseAdminInvitation requiredArgs object_ =
    Object.selectionForCompositeField "cancelEnterpriseAdminInvitation" [ Argument.required "input" requiredArgs.input Github.InputObject.encodeCancelEnterpriseAdminInvitationInput ] object_ (identity >> Decode.nullable)


type alias ChangeUserStatusRequiredArguments =
    { input : Github.InputObject.ChangeUserStatusInput }


{-| Update your status on GitHub.

  - input -

-}
changeUserStatus : ChangeUserStatusRequiredArguments -> SelectionSet decodesTo Github.Object.ChangeUserStatusPayload -> SelectionSet (Maybe decodesTo) RootMutation
changeUserStatus requiredArgs object_ =
    Object.selectionForCompositeField "changeUserStatus" [ Argument.required "input" requiredArgs.input Github.InputObject.encodeChangeUserStatusInput ] object_ (identity >> Decode.nullable)


type alias ClearLabelsFromLabelableRequiredArguments =
    { input : Github.InputObject.ClearLabelsFromLabelableInput }


{-| Clears all labels from a labelable object.

  - input -

-}
clearLabelsFromLabelable : ClearLabelsFromLabelableRequiredArguments -> SelectionSet decodesTo Github.Object.ClearLabelsFromLabelablePayload -> SelectionSet (Maybe decodesTo) RootMutation
clearLabelsFromLabelable requiredArgs object_ =
    Object.selectionForCompositeField "clearLabelsFromLabelable" [ Argument.required "input" requiredArgs.input Github.InputObject.encodeClearLabelsFromLabelableInput ] object_ (identity >> Decode.nullable)


type alias CloneProjectRequiredArguments =
    { input : Github.InputObject.CloneProjectInput }


{-| Creates a new project by cloning configuration from an existing project.

  - input -

-}
cloneProject : CloneProjectRequiredArguments -> SelectionSet decodesTo Github.Object.CloneProjectPayload -> SelectionSet (Maybe decodesTo) RootMutation
cloneProject requiredArgs object_ =
    Object.selectionForCompositeField "cloneProject" [ Argument.required "input" requiredArgs.input Github.InputObject.encodeCloneProjectInput ] object_ (identity >> Decode.nullable)


type alias CloneTemplateRepositoryRequiredArguments =
    { input : Github.InputObject.CloneTemplateRepositoryInput }


{-| Create a new repository with the same files and directory structure as a template repository.

  - input -

-}
cloneTemplateRepository : CloneTemplateRepositoryRequiredArguments -> SelectionSet decodesTo Github.Object.CloneTemplateRepositoryPayload -> SelectionSet (Maybe decodesTo) RootMutation
cloneTemplateRepository requiredArgs object_ =
    Object.selectionForCompositeField "cloneTemplateRepository" [ Argument.required "input" requiredArgs.input Github.InputObject.encodeCloneTemplateRepositoryInput ] object_ (identity >> Decode.nullable)


type alias CloseIssueRequiredArguments =
    { input : Github.InputObject.CloseIssueInput }


{-| Close an issue.

  - input -

-}
closeIssue : CloseIssueRequiredArguments -> SelectionSet decodesTo Github.Object.CloseIssuePayload -> SelectionSet (Maybe decodesTo) RootMutation
closeIssue requiredArgs object_ =
    Object.selectionForCompositeField "closeIssue" [ Argument.required "input" requiredArgs.input Github.InputObject.encodeCloseIssueInput ] object_ (identity >> Decode.nullable)


type alias ClosePullRequestRequiredArguments =
    { input : Github.InputObject.ClosePullRequestInput }


{-| Close a pull request.

  - input -

-}
closePullRequest : ClosePullRequestRequiredArguments -> SelectionSet decodesTo Github.Object.ClosePullRequestPayload -> SelectionSet (Maybe decodesTo) RootMutation
closePullRequest requiredArgs object_ =
    Object.selectionForCompositeField "closePullRequest" [ Argument.required "input" requiredArgs.input Github.InputObject.encodeClosePullRequestInput ] object_ (identity >> Decode.nullable)


type alias ConvertProjectCardNoteToIssueRequiredArguments =
    { input : Github.InputObject.ConvertProjectCardNoteToIssueInput }


{-| Convert a project note card to one associated with a newly created issue.

  - input -

-}
convertProjectCardNoteToIssue : ConvertProjectCardNoteToIssueRequiredArguments -> SelectionSet decodesTo Github.Object.ConvertProjectCardNoteToIssuePayload -> SelectionSet (Maybe decodesTo) RootMutation
convertProjectCardNoteToIssue requiredArgs object_ =
    Object.selectionForCompositeField "convertProjectCardNoteToIssue" [ Argument.required "input" requiredArgs.input Github.InputObject.encodeConvertProjectCardNoteToIssueInput ] object_ (identity >> Decode.nullable)


type alias CreateBranchProtectionRuleRequiredArguments =
    { input : Github.InputObject.CreateBranchProtectionRuleInput }


{-| Create a new branch protection rule

  - input -

-}
createBranchProtectionRule : CreateBranchProtectionRuleRequiredArguments -> SelectionSet decodesTo Github.Object.CreateBranchProtectionRulePayload -> SelectionSet (Maybe decodesTo) RootMutation
createBranchProtectionRule requiredArgs object_ =
    Object.selectionForCompositeField "createBranchProtectionRule" [ Argument.required "input" requiredArgs.input Github.InputObject.encodeCreateBranchProtectionRuleInput ] object_ (identity >> Decode.nullable)


type alias CreateEnterpriseOrganizationRequiredArguments =
    { input : Github.InputObject.CreateEnterpriseOrganizationInput }


{-| Creates an organization as part of an enterprise account.

  - input -

-}
createEnterpriseOrganization : CreateEnterpriseOrganizationRequiredArguments -> SelectionSet decodesTo Github.Object.CreateEnterpriseOrganizationPayload -> SelectionSet (Maybe decodesTo) RootMutation
createEnterpriseOrganization requiredArgs object_ =
    Object.selectionForCompositeField "createEnterpriseOrganization" [ Argument.required "input" requiredArgs.input Github.InputObject.encodeCreateEnterpriseOrganizationInput ] object_ (identity >> Decode.nullable)


type alias CreateIssueRequiredArguments =
    { input : Github.InputObject.CreateIssueInput }


{-| Creates a new issue.

  - input -

-}
createIssue : CreateIssueRequiredArguments -> SelectionSet decodesTo Github.Object.CreateIssuePayload -> SelectionSet (Maybe decodesTo) RootMutation
createIssue requiredArgs object_ =
    Object.selectionForCompositeField "createIssue" [ Argument.required "input" requiredArgs.input Github.InputObject.encodeCreateIssueInput ] object_ (identity >> Decode.nullable)


type alias CreateProjectRequiredArguments =
    { input : Github.InputObject.CreateProjectInput }


{-| Creates a new project.

  - input -

-}
createProject : CreateProjectRequiredArguments -> SelectionSet decodesTo Github.Object.CreateProjectPayload -> SelectionSet (Maybe decodesTo) RootMutation
createProject requiredArgs object_ =
    Object.selectionForCompositeField "createProject" [ Argument.required "input" requiredArgs.input Github.InputObject.encodeCreateProjectInput ] object_ (identity >> Decode.nullable)


type alias CreatePullRequestRequiredArguments =
    { input : Github.InputObject.CreatePullRequestInput }


{-| Create a new pull request

  - input -

-}
createPullRequest : CreatePullRequestRequiredArguments -> SelectionSet decodesTo Github.Object.CreatePullRequestPayload -> SelectionSet (Maybe decodesTo) RootMutation
createPullRequest requiredArgs object_ =
    Object.selectionForCompositeField "createPullRequest" [ Argument.required "input" requiredArgs.input Github.InputObject.encodeCreatePullRequestInput ] object_ (identity >> Decode.nullable)


type alias CreateRefRequiredArguments =
    { input : Github.InputObject.CreateRefInput }


{-| Create a new Git Ref.

  - input -

-}
createRef : CreateRefRequiredArguments -> SelectionSet decodesTo Github.Object.CreateRefPayload -> SelectionSet (Maybe decodesTo) RootMutation
createRef requiredArgs object_ =
    Object.selectionForCompositeField "createRef" [ Argument.required "input" requiredArgs.input Github.InputObject.encodeCreateRefInput ] object_ (identity >> Decode.nullable)


type alias CreateRepositoryRequiredArguments =
    { input : Github.InputObject.CreateRepositoryInput }


{-| Create a new repository.

  - input -

-}
createRepository : CreateRepositoryRequiredArguments -> SelectionSet decodesTo Github.Object.CreateRepositoryPayload -> SelectionSet (Maybe decodesTo) RootMutation
createRepository requiredArgs object_ =
    Object.selectionForCompositeField "createRepository" [ Argument.required "input" requiredArgs.input Github.InputObject.encodeCreateRepositoryInput ] object_ (identity >> Decode.nullable)


type alias CreateTeamDiscussionRequiredArguments =
    { input : Github.InputObject.CreateTeamDiscussionInput }


{-| Creates a new team discussion.

  - input -

-}
createTeamDiscussion : CreateTeamDiscussionRequiredArguments -> SelectionSet decodesTo Github.Object.CreateTeamDiscussionPayload -> SelectionSet (Maybe decodesTo) RootMutation
createTeamDiscussion requiredArgs object_ =
    Object.selectionForCompositeField "createTeamDiscussion" [ Argument.required "input" requiredArgs.input Github.InputObject.encodeCreateTeamDiscussionInput ] object_ (identity >> Decode.nullable)


type alias CreateTeamDiscussionCommentRequiredArguments =
    { input : Github.InputObject.CreateTeamDiscussionCommentInput }


{-| Creates a new team discussion comment.

  - input -

-}
createTeamDiscussionComment : CreateTeamDiscussionCommentRequiredArguments -> SelectionSet decodesTo Github.Object.CreateTeamDiscussionCommentPayload -> SelectionSet (Maybe decodesTo) RootMutation
createTeamDiscussionComment requiredArgs object_ =
    Object.selectionForCompositeField "createTeamDiscussionComment" [ Argument.required "input" requiredArgs.input Github.InputObject.encodeCreateTeamDiscussionCommentInput ] object_ (identity >> Decode.nullable)


type alias DeclineTopicSuggestionRequiredArguments =
    { input : Github.InputObject.DeclineTopicSuggestionInput }


{-| Rejects a suggested topic for the repository.

  - input -

-}
declineTopicSuggestion : DeclineTopicSuggestionRequiredArguments -> SelectionSet decodesTo Github.Object.DeclineTopicSuggestionPayload -> SelectionSet (Maybe decodesTo) RootMutation
declineTopicSuggestion requiredArgs object_ =
    Object.selectionForCompositeField "declineTopicSuggestion" [ Argument.required "input" requiredArgs.input Github.InputObject.encodeDeclineTopicSuggestionInput ] object_ (identity >> Decode.nullable)


type alias DeleteBranchProtectionRuleRequiredArguments =
    { input : Github.InputObject.DeleteBranchProtectionRuleInput }


{-| Delete a branch protection rule

  - input -

-}
deleteBranchProtectionRule : DeleteBranchProtectionRuleRequiredArguments -> SelectionSet decodesTo Github.Object.DeleteBranchProtectionRulePayload -> SelectionSet (Maybe decodesTo) RootMutation
deleteBranchProtectionRule requiredArgs object_ =
    Object.selectionForCompositeField "deleteBranchProtectionRule" [ Argument.required "input" requiredArgs.input Github.InputObject.encodeDeleteBranchProtectionRuleInput ] object_ (identity >> Decode.nullable)


type alias DeleteIssueRequiredArguments =
    { input : Github.InputObject.DeleteIssueInput }


{-| Deletes an Issue object.

  - input -

-}
deleteIssue : DeleteIssueRequiredArguments -> SelectionSet decodesTo Github.Object.DeleteIssuePayload -> SelectionSet (Maybe decodesTo) RootMutation
deleteIssue requiredArgs object_ =
    Object.selectionForCompositeField "deleteIssue" [ Argument.required "input" requiredArgs.input Github.InputObject.encodeDeleteIssueInput ] object_ (identity >> Decode.nullable)


type alias DeleteIssueCommentRequiredArguments =
    { input : Github.InputObject.DeleteIssueCommentInput }


{-| Deletes an IssueComment object.

  - input -

-}
deleteIssueComment : DeleteIssueCommentRequiredArguments -> SelectionSet decodesTo Github.Object.DeleteIssueCommentPayload -> SelectionSet (Maybe decodesTo) RootMutation
deleteIssueComment requiredArgs object_ =
    Object.selectionForCompositeField "deleteIssueComment" [ Argument.required "input" requiredArgs.input Github.InputObject.encodeDeleteIssueCommentInput ] object_ (identity >> Decode.nullable)


type alias DeleteProjectRequiredArguments =
    { input : Github.InputObject.DeleteProjectInput }


{-| Deletes a project.

  - input -

-}
deleteProject : DeleteProjectRequiredArguments -> SelectionSet decodesTo Github.Object.DeleteProjectPayload -> SelectionSet (Maybe decodesTo) RootMutation
deleteProject requiredArgs object_ =
    Object.selectionForCompositeField "deleteProject" [ Argument.required "input" requiredArgs.input Github.InputObject.encodeDeleteProjectInput ] object_ (identity >> Decode.nullable)


type alias DeleteProjectCardRequiredArguments =
    { input : Github.InputObject.DeleteProjectCardInput }


{-| Deletes a project card.

  - input -

-}
deleteProjectCard : DeleteProjectCardRequiredArguments -> SelectionSet decodesTo Github.Object.DeleteProjectCardPayload -> SelectionSet (Maybe decodesTo) RootMutation
deleteProjectCard requiredArgs object_ =
    Object.selectionForCompositeField "deleteProjectCard" [ Argument.required "input" requiredArgs.input Github.InputObject.encodeDeleteProjectCardInput ] object_ (identity >> Decode.nullable)


type alias DeleteProjectColumnRequiredArguments =
    { input : Github.InputObject.DeleteProjectColumnInput }


{-| Deletes a project column.

  - input -

-}
deleteProjectColumn : DeleteProjectColumnRequiredArguments -> SelectionSet decodesTo Github.Object.DeleteProjectColumnPayload -> SelectionSet (Maybe decodesTo) RootMutation
deleteProjectColumn requiredArgs object_ =
    Object.selectionForCompositeField "deleteProjectColumn" [ Argument.required "input" requiredArgs.input Github.InputObject.encodeDeleteProjectColumnInput ] object_ (identity >> Decode.nullable)


type alias DeletePullRequestReviewRequiredArguments =
    { input : Github.InputObject.DeletePullRequestReviewInput }


{-| Deletes a pull request review.

  - input -

-}
deletePullRequestReview : DeletePullRequestReviewRequiredArguments -> SelectionSet decodesTo Github.Object.DeletePullRequestReviewPayload -> SelectionSet (Maybe decodesTo) RootMutation
deletePullRequestReview requiredArgs object_ =
    Object.selectionForCompositeField "deletePullRequestReview" [ Argument.required "input" requiredArgs.input Github.InputObject.encodeDeletePullRequestReviewInput ] object_ (identity >> Decode.nullable)


type alias DeletePullRequestReviewCommentRequiredArguments =
    { input : Github.InputObject.DeletePullRequestReviewCommentInput }


{-| Deletes a pull request review comment.

  - input -

-}
deletePullRequestReviewComment : DeletePullRequestReviewCommentRequiredArguments -> SelectionSet decodesTo Github.Object.DeletePullRequestReviewCommentPayload -> SelectionSet (Maybe decodesTo) RootMutation
deletePullRequestReviewComment requiredArgs object_ =
    Object.selectionForCompositeField "deletePullRequestReviewComment" [ Argument.required "input" requiredArgs.input Github.InputObject.encodeDeletePullRequestReviewCommentInput ] object_ (identity >> Decode.nullable)


type alias DeleteRefRequiredArguments =
    { input : Github.InputObject.DeleteRefInput }


{-| Delete a Git Ref.

  - input -

-}
deleteRef : DeleteRefRequiredArguments -> SelectionSet decodesTo Github.Object.DeleteRefPayload -> SelectionSet (Maybe decodesTo) RootMutation
deleteRef requiredArgs object_ =
    Object.selectionForCompositeField "deleteRef" [ Argument.required "input" requiredArgs.input Github.InputObject.encodeDeleteRefInput ] object_ (identity >> Decode.nullable)


type alias DeleteTeamDiscussionRequiredArguments =
    { input : Github.InputObject.DeleteTeamDiscussionInput }


{-| Deletes a team discussion.

  - input -

-}
deleteTeamDiscussion : DeleteTeamDiscussionRequiredArguments -> SelectionSet decodesTo Github.Object.DeleteTeamDiscussionPayload -> SelectionSet (Maybe decodesTo) RootMutation
deleteTeamDiscussion requiredArgs object_ =
    Object.selectionForCompositeField "deleteTeamDiscussion" [ Argument.required "input" requiredArgs.input Github.InputObject.encodeDeleteTeamDiscussionInput ] object_ (identity >> Decode.nullable)


type alias DeleteTeamDiscussionCommentRequiredArguments =
    { input : Github.InputObject.DeleteTeamDiscussionCommentInput }


{-| Deletes a team discussion comment.

  - input -

-}
deleteTeamDiscussionComment : DeleteTeamDiscussionCommentRequiredArguments -> SelectionSet decodesTo Github.Object.DeleteTeamDiscussionCommentPayload -> SelectionSet (Maybe decodesTo) RootMutation
deleteTeamDiscussionComment requiredArgs object_ =
    Object.selectionForCompositeField "deleteTeamDiscussionComment" [ Argument.required "input" requiredArgs.input Github.InputObject.encodeDeleteTeamDiscussionCommentInput ] object_ (identity >> Decode.nullable)


type alias DismissPullRequestReviewRequiredArguments =
    { input : Github.InputObject.DismissPullRequestReviewInput }


{-| Dismisses an approved or rejected pull request review.

  - input -

-}
dismissPullRequestReview : DismissPullRequestReviewRequiredArguments -> SelectionSet decodesTo Github.Object.DismissPullRequestReviewPayload -> SelectionSet (Maybe decodesTo) RootMutation
dismissPullRequestReview requiredArgs object_ =
    Object.selectionForCompositeField "dismissPullRequestReview" [ Argument.required "input" requiredArgs.input Github.InputObject.encodeDismissPullRequestReviewInput ] object_ (identity >> Decode.nullable)


type alias FollowUserRequiredArguments =
    { input : Github.InputObject.FollowUserInput }


{-| Follow a user.

  - input -

-}
followUser : FollowUserRequiredArguments -> SelectionSet decodesTo Github.Object.FollowUserPayload -> SelectionSet (Maybe decodesTo) RootMutation
followUser requiredArgs object_ =
    Object.selectionForCompositeField "followUser" [ Argument.required "input" requiredArgs.input Github.InputObject.encodeFollowUserInput ] object_ (identity >> Decode.nullable)


type alias InviteEnterpriseAdminRequiredArguments =
    { input : Github.InputObject.InviteEnterpriseAdminInput }


{-| Invite someone to become an administrator of the enterprise.

  - input -

-}
inviteEnterpriseAdmin : InviteEnterpriseAdminRequiredArguments -> SelectionSet decodesTo Github.Object.InviteEnterpriseAdminPayload -> SelectionSet (Maybe decodesTo) RootMutation
inviteEnterpriseAdmin requiredArgs object_ =
    Object.selectionForCompositeField "inviteEnterpriseAdmin" [ Argument.required "input" requiredArgs.input Github.InputObject.encodeInviteEnterpriseAdminInput ] object_ (identity >> Decode.nullable)


type alias LinkRepositoryToProjectRequiredArguments =
    { input : Github.InputObject.LinkRepositoryToProjectInput }


{-| Creates a repository link for a project.

  - input -

-}
linkRepositoryToProject : LinkRepositoryToProjectRequiredArguments -> SelectionSet decodesTo Github.Object.LinkRepositoryToProjectPayload -> SelectionSet (Maybe decodesTo) RootMutation
linkRepositoryToProject requiredArgs object_ =
    Object.selectionForCompositeField "linkRepositoryToProject" [ Argument.required "input" requiredArgs.input Github.InputObject.encodeLinkRepositoryToProjectInput ] object_ (identity >> Decode.nullable)


type alias LockLockableRequiredArguments =
    { input : Github.InputObject.LockLockableInput }


{-| Lock a lockable object

  - input -

-}
lockLockable : LockLockableRequiredArguments -> SelectionSet decodesTo Github.Object.LockLockablePayload -> SelectionSet (Maybe decodesTo) RootMutation
lockLockable requiredArgs object_ =
    Object.selectionForCompositeField "lockLockable" [ Argument.required "input" requiredArgs.input Github.InputObject.encodeLockLockableInput ] object_ (identity >> Decode.nullable)


type alias MergeBranchRequiredArguments =
    { input : Github.InputObject.MergeBranchInput }


{-| Merge a head into a branch.

  - input -

-}
mergeBranch : MergeBranchRequiredArguments -> SelectionSet decodesTo Github.Object.MergeBranchPayload -> SelectionSet (Maybe decodesTo) RootMutation
mergeBranch requiredArgs object_ =
    Object.selectionForCompositeField "mergeBranch" [ Argument.required "input" requiredArgs.input Github.InputObject.encodeMergeBranchInput ] object_ (identity >> Decode.nullable)


type alias MergePullRequestRequiredArguments =
    { input : Github.InputObject.MergePullRequestInput }


{-| Merge a pull request.

  - input -

-}
mergePullRequest : MergePullRequestRequiredArguments -> SelectionSet decodesTo Github.Object.MergePullRequestPayload -> SelectionSet (Maybe decodesTo) RootMutation
mergePullRequest requiredArgs object_ =
    Object.selectionForCompositeField "mergePullRequest" [ Argument.required "input" requiredArgs.input Github.InputObject.encodeMergePullRequestInput ] object_ (identity >> Decode.nullable)


type alias MoveProjectCardRequiredArguments =
    { input : Github.InputObject.MoveProjectCardInput }


{-| Moves a project card to another place.

  - input -

-}
moveProjectCard : MoveProjectCardRequiredArguments -> SelectionSet decodesTo Github.Object.MoveProjectCardPayload -> SelectionSet (Maybe decodesTo) RootMutation
moveProjectCard requiredArgs object_ =
    Object.selectionForCompositeField "moveProjectCard" [ Argument.required "input" requiredArgs.input Github.InputObject.encodeMoveProjectCardInput ] object_ (identity >> Decode.nullable)


type alias MoveProjectColumnRequiredArguments =
    { input : Github.InputObject.MoveProjectColumnInput }


{-| Moves a project column to another place.

  - input -

-}
moveProjectColumn : MoveProjectColumnRequiredArguments -> SelectionSet decodesTo Github.Object.MoveProjectColumnPayload -> SelectionSet (Maybe decodesTo) RootMutation
moveProjectColumn requiredArgs object_ =
    Object.selectionForCompositeField "moveProjectColumn" [ Argument.required "input" requiredArgs.input Github.InputObject.encodeMoveProjectColumnInput ] object_ (identity >> Decode.nullable)


type alias RegenerateEnterpriseIdentityProviderRecoveryCodesRequiredArguments =
    { input : Github.InputObject.RegenerateEnterpriseIdentityProviderRecoveryCodesInput }


{-| Regenerates the identity provider recovery codes for an enterprise

  - input -

-}
regenerateEnterpriseIdentityProviderRecoveryCodes : RegenerateEnterpriseIdentityProviderRecoveryCodesRequiredArguments -> SelectionSet decodesTo Github.Object.RegenerateEnterpriseIdentityProviderRecoveryCodesPayload -> SelectionSet (Maybe decodesTo) RootMutation
regenerateEnterpriseIdentityProviderRecoveryCodes requiredArgs object_ =
    Object.selectionForCompositeField "regenerateEnterpriseIdentityProviderRecoveryCodes" [ Argument.required "input" requiredArgs.input Github.InputObject.encodeRegenerateEnterpriseIdentityProviderRecoveryCodesInput ] object_ (identity >> Decode.nullable)


type alias RemoveAssigneesFromAssignableRequiredArguments =
    { input : Github.InputObject.RemoveAssigneesFromAssignableInput }


{-| Removes assignees from an assignable object.

  - input -

-}
removeAssigneesFromAssignable : RemoveAssigneesFromAssignableRequiredArguments -> SelectionSet decodesTo Github.Object.RemoveAssigneesFromAssignablePayload -> SelectionSet (Maybe decodesTo) RootMutation
removeAssigneesFromAssignable requiredArgs object_ =
    Object.selectionForCompositeField "removeAssigneesFromAssignable" [ Argument.required "input" requiredArgs.input Github.InputObject.encodeRemoveAssigneesFromAssignableInput ] object_ (identity >> Decode.nullable)


type alias RemoveEnterpriseAdminRequiredArguments =
    { input : Github.InputObject.RemoveEnterpriseAdminInput }


{-| Removes an administrator from the enterprise.

  - input -

-}
removeEnterpriseAdmin : RemoveEnterpriseAdminRequiredArguments -> SelectionSet decodesTo Github.Object.RemoveEnterpriseAdminPayload -> SelectionSet (Maybe decodesTo) RootMutation
removeEnterpriseAdmin requiredArgs object_ =
    Object.selectionForCompositeField "removeEnterpriseAdmin" [ Argument.required "input" requiredArgs.input Github.InputObject.encodeRemoveEnterpriseAdminInput ] object_ (identity >> Decode.nullable)


type alias RemoveEnterpriseOrganizationRequiredArguments =
    { input : Github.InputObject.RemoveEnterpriseOrganizationInput }


{-| Removes an organization from the enterprise

  - input -

-}
removeEnterpriseOrganization : RemoveEnterpriseOrganizationRequiredArguments -> SelectionSet decodesTo Github.Object.RemoveEnterpriseOrganizationPayload -> SelectionSet (Maybe decodesTo) RootMutation
removeEnterpriseOrganization requiredArgs object_ =
    Object.selectionForCompositeField "removeEnterpriseOrganization" [ Argument.required "input" requiredArgs.input Github.InputObject.encodeRemoveEnterpriseOrganizationInput ] object_ (identity >> Decode.nullable)


type alias RemoveLabelsFromLabelableRequiredArguments =
    { input : Github.InputObject.RemoveLabelsFromLabelableInput }


{-| Removes labels from a Labelable object.

  - input -

-}
removeLabelsFromLabelable : RemoveLabelsFromLabelableRequiredArguments -> SelectionSet decodesTo Github.Object.RemoveLabelsFromLabelablePayload -> SelectionSet (Maybe decodesTo) RootMutation
removeLabelsFromLabelable requiredArgs object_ =
    Object.selectionForCompositeField "removeLabelsFromLabelable" [ Argument.required "input" requiredArgs.input Github.InputObject.encodeRemoveLabelsFromLabelableInput ] object_ (identity >> Decode.nullable)


type alias RemoveOutsideCollaboratorRequiredArguments =
    { input : Github.InputObject.RemoveOutsideCollaboratorInput }


{-| Removes outside collaborator from all repositories in an organization.

  - input -

-}
removeOutsideCollaborator : RemoveOutsideCollaboratorRequiredArguments -> SelectionSet decodesTo Github.Object.RemoveOutsideCollaboratorPayload -> SelectionSet (Maybe decodesTo) RootMutation
removeOutsideCollaborator requiredArgs object_ =
    Object.selectionForCompositeField "removeOutsideCollaborator" [ Argument.required "input" requiredArgs.input Github.InputObject.encodeRemoveOutsideCollaboratorInput ] object_ (identity >> Decode.nullable)


type alias RemoveReactionRequiredArguments =
    { input : Github.InputObject.RemoveReactionInput }


{-| Removes a reaction from a subject.

  - input -

-}
removeReaction : RemoveReactionRequiredArguments -> SelectionSet decodesTo Github.Object.RemoveReactionPayload -> SelectionSet (Maybe decodesTo) RootMutation
removeReaction requiredArgs object_ =
    Object.selectionForCompositeField "removeReaction" [ Argument.required "input" requiredArgs.input Github.InputObject.encodeRemoveReactionInput ] object_ (identity >> Decode.nullable)


type alias RemoveStarRequiredArguments =
    { input : Github.InputObject.RemoveStarInput }


{-| Removes a star from a Starrable.

  - input -

-}
removeStar : RemoveStarRequiredArguments -> SelectionSet decodesTo Github.Object.RemoveStarPayload -> SelectionSet (Maybe decodesTo) RootMutation
removeStar requiredArgs object_ =
    Object.selectionForCompositeField "removeStar" [ Argument.required "input" requiredArgs.input Github.InputObject.encodeRemoveStarInput ] object_ (identity >> Decode.nullable)


type alias ReopenIssueRequiredArguments =
    { input : Github.InputObject.ReopenIssueInput }


{-| Reopen a issue.

  - input -

-}
reopenIssue : ReopenIssueRequiredArguments -> SelectionSet decodesTo Github.Object.ReopenIssuePayload -> SelectionSet (Maybe decodesTo) RootMutation
reopenIssue requiredArgs object_ =
    Object.selectionForCompositeField "reopenIssue" [ Argument.required "input" requiredArgs.input Github.InputObject.encodeReopenIssueInput ] object_ (identity >> Decode.nullable)


type alias ReopenPullRequestRequiredArguments =
    { input : Github.InputObject.ReopenPullRequestInput }


{-| Reopen a pull request.

  - input -

-}
reopenPullRequest : ReopenPullRequestRequiredArguments -> SelectionSet decodesTo Github.Object.ReopenPullRequestPayload -> SelectionSet (Maybe decodesTo) RootMutation
reopenPullRequest requiredArgs object_ =
    Object.selectionForCompositeField "reopenPullRequest" [ Argument.required "input" requiredArgs.input Github.InputObject.encodeReopenPullRequestInput ] object_ (identity >> Decode.nullable)


type alias RequestReviewsRequiredArguments =
    { input : Github.InputObject.RequestReviewsInput }


{-| Set review requests on a pull request.

  - input -

-}
requestReviews : RequestReviewsRequiredArguments -> SelectionSet decodesTo Github.Object.RequestReviewsPayload -> SelectionSet (Maybe decodesTo) RootMutation
requestReviews requiredArgs object_ =
    Object.selectionForCompositeField "requestReviews" [ Argument.required "input" requiredArgs.input Github.InputObject.encodeRequestReviewsInput ] object_ (identity >> Decode.nullable)


type alias ResolveReviewThreadRequiredArguments =
    { input : Github.InputObject.ResolveReviewThreadInput }


{-| Marks a review thread as resolved.

  - input -

-}
resolveReviewThread : ResolveReviewThreadRequiredArguments -> SelectionSet decodesTo Github.Object.ResolveReviewThreadPayload -> SelectionSet (Maybe decodesTo) RootMutation
resolveReviewThread requiredArgs object_ =
    Object.selectionForCompositeField "resolveReviewThread" [ Argument.required "input" requiredArgs.input Github.InputObject.encodeResolveReviewThreadInput ] object_ (identity >> Decode.nullable)


type alias SubmitPullRequestReviewRequiredArguments =
    { input : Github.InputObject.SubmitPullRequestReviewInput }


{-| Submits a pending pull request review.

  - input -

-}
submitPullRequestReview : SubmitPullRequestReviewRequiredArguments -> SelectionSet decodesTo Github.Object.SubmitPullRequestReviewPayload -> SelectionSet (Maybe decodesTo) RootMutation
submitPullRequestReview requiredArgs object_ =
    Object.selectionForCompositeField "submitPullRequestReview" [ Argument.required "input" requiredArgs.input Github.InputObject.encodeSubmitPullRequestReviewInput ] object_ (identity >> Decode.nullable)


type alias TransferIssueRequiredArguments =
    { input : Github.InputObject.TransferIssueInput }


{-| Transfer an issue to a different repository

  - input -

-}
transferIssue : TransferIssueRequiredArguments -> SelectionSet decodesTo Github.Object.TransferIssuePayload -> SelectionSet (Maybe decodesTo) RootMutation
transferIssue requiredArgs object_ =
    Object.selectionForCompositeField "transferIssue" [ Argument.required "input" requiredArgs.input Github.InputObject.encodeTransferIssueInput ] object_ (identity >> Decode.nullable)


type alias UnarchiveRepositoryRequiredArguments =
    { input : Github.InputObject.UnarchiveRepositoryInput }


{-| Unarchives a repository.

  - input -

-}
unarchiveRepository : UnarchiveRepositoryRequiredArguments -> SelectionSet decodesTo Github.Object.UnarchiveRepositoryPayload -> SelectionSet (Maybe decodesTo) RootMutation
unarchiveRepository requiredArgs object_ =
    Object.selectionForCompositeField "unarchiveRepository" [ Argument.required "input" requiredArgs.input Github.InputObject.encodeUnarchiveRepositoryInput ] object_ (identity >> Decode.nullable)


type alias UnfollowUserRequiredArguments =
    { input : Github.InputObject.UnfollowUserInput }


{-| Unfollow a user.

  - input -

-}
unfollowUser : UnfollowUserRequiredArguments -> SelectionSet decodesTo Github.Object.UnfollowUserPayload -> SelectionSet (Maybe decodesTo) RootMutation
unfollowUser requiredArgs object_ =
    Object.selectionForCompositeField "unfollowUser" [ Argument.required "input" requiredArgs.input Github.InputObject.encodeUnfollowUserInput ] object_ (identity >> Decode.nullable)


type alias UnlinkRepositoryFromProjectRequiredArguments =
    { input : Github.InputObject.UnlinkRepositoryFromProjectInput }


{-| Deletes a repository link from a project.

  - input -

-}
unlinkRepositoryFromProject : UnlinkRepositoryFromProjectRequiredArguments -> SelectionSet decodesTo Github.Object.UnlinkRepositoryFromProjectPayload -> SelectionSet (Maybe decodesTo) RootMutation
unlinkRepositoryFromProject requiredArgs object_ =
    Object.selectionForCompositeField "unlinkRepositoryFromProject" [ Argument.required "input" requiredArgs.input Github.InputObject.encodeUnlinkRepositoryFromProjectInput ] object_ (identity >> Decode.nullable)


type alias UnlockLockableRequiredArguments =
    { input : Github.InputObject.UnlockLockableInput }


{-| Unlock a lockable object

  - input -

-}
unlockLockable : UnlockLockableRequiredArguments -> SelectionSet decodesTo Github.Object.UnlockLockablePayload -> SelectionSet (Maybe decodesTo) RootMutation
unlockLockable requiredArgs object_ =
    Object.selectionForCompositeField "unlockLockable" [ Argument.required "input" requiredArgs.input Github.InputObject.encodeUnlockLockableInput ] object_ (identity >> Decode.nullable)


type alias UnmarkIssueAsDuplicateRequiredArguments =
    { input : Github.InputObject.UnmarkIssueAsDuplicateInput }


{-| Unmark an issue as a duplicate of another issue.

  - input -

-}
unmarkIssueAsDuplicate : UnmarkIssueAsDuplicateRequiredArguments -> SelectionSet decodesTo Github.Object.UnmarkIssueAsDuplicatePayload -> SelectionSet (Maybe decodesTo) RootMutation
unmarkIssueAsDuplicate requiredArgs object_ =
    Object.selectionForCompositeField "unmarkIssueAsDuplicate" [ Argument.required "input" requiredArgs.input Github.InputObject.encodeUnmarkIssueAsDuplicateInput ] object_ (identity >> Decode.nullable)


type alias UnresolveReviewThreadRequiredArguments =
    { input : Github.InputObject.UnresolveReviewThreadInput }


{-| Marks a review thread as unresolved.

  - input -

-}
unresolveReviewThread : UnresolveReviewThreadRequiredArguments -> SelectionSet decodesTo Github.Object.UnresolveReviewThreadPayload -> SelectionSet (Maybe decodesTo) RootMutation
unresolveReviewThread requiredArgs object_ =
    Object.selectionForCompositeField "unresolveReviewThread" [ Argument.required "input" requiredArgs.input Github.InputObject.encodeUnresolveReviewThreadInput ] object_ (identity >> Decode.nullable)


type alias UpdateBranchProtectionRuleRequiredArguments =
    { input : Github.InputObject.UpdateBranchProtectionRuleInput }


{-| Create a new branch protection rule

  - input -

-}
updateBranchProtectionRule : UpdateBranchProtectionRuleRequiredArguments -> SelectionSet decodesTo Github.Object.UpdateBranchProtectionRulePayload -> SelectionSet (Maybe decodesTo) RootMutation
updateBranchProtectionRule requiredArgs object_ =
    Object.selectionForCompositeField "updateBranchProtectionRule" [ Argument.required "input" requiredArgs.input Github.InputObject.encodeUpdateBranchProtectionRuleInput ] object_ (identity >> Decode.nullable)


type alias UpdateEnterpriseActionExecutionCapabilitySettingRequiredArguments =
    { input : Github.InputObject.UpdateEnterpriseActionExecutionCapabilitySettingInput }


{-| Sets the action execution capability setting for an enterprise.

  - input -

-}
updateEnterpriseActionExecutionCapabilitySetting : UpdateEnterpriseActionExecutionCapabilitySettingRequiredArguments -> SelectionSet decodesTo Github.Object.UpdateEnterpriseActionExecutionCapabilitySettingPayload -> SelectionSet (Maybe decodesTo) RootMutation
updateEnterpriseActionExecutionCapabilitySetting requiredArgs object_ =
    Object.selectionForCompositeField "updateEnterpriseActionExecutionCapabilitySetting" [ Argument.required "input" requiredArgs.input Github.InputObject.encodeUpdateEnterpriseActionExecutionCapabilitySettingInput ] object_ (identity >> Decode.nullable)


type alias UpdateEnterpriseAdministratorRoleRequiredArguments =
    { input : Github.InputObject.UpdateEnterpriseAdministratorRoleInput }


{-| Updates the role of an enterprise administrator.

  - input -

-}
updateEnterpriseAdministratorRole : UpdateEnterpriseAdministratorRoleRequiredArguments -> SelectionSet decodesTo Github.Object.UpdateEnterpriseAdministratorRolePayload -> SelectionSet (Maybe decodesTo) RootMutation
updateEnterpriseAdministratorRole requiredArgs object_ =
    Object.selectionForCompositeField "updateEnterpriseAdministratorRole" [ Argument.required "input" requiredArgs.input Github.InputObject.encodeUpdateEnterpriseAdministratorRoleInput ] object_ (identity >> Decode.nullable)


type alias UpdateEnterpriseAllowPrivateRepositoryForkingSettingRequiredArguments =
    { input : Github.InputObject.UpdateEnterpriseAllowPrivateRepositoryForkingSettingInput }


{-| Sets whether private repository forks are enabled for an enterprise.

  - input -

-}
updateEnterpriseAllowPrivateRepositoryForkingSetting : UpdateEnterpriseAllowPrivateRepositoryForkingSettingRequiredArguments -> SelectionSet decodesTo Github.Object.UpdateEnterpriseAllowPrivateRepositoryForkingSettingPayload -> SelectionSet (Maybe decodesTo) RootMutation
updateEnterpriseAllowPrivateRepositoryForkingSetting requiredArgs object_ =
    Object.selectionForCompositeField "updateEnterpriseAllowPrivateRepositoryForkingSetting" [ Argument.required "input" requiredArgs.input Github.InputObject.encodeUpdateEnterpriseAllowPrivateRepositoryForkingSettingInput ] object_ (identity >> Decode.nullable)


type alias UpdateEnterpriseDefaultRepositoryPermissionSettingRequiredArguments =
    { input : Github.InputObject.UpdateEnterpriseDefaultRepositoryPermissionSettingInput }


{-| Sets the default repository permission for organizations in an enterprise.

  - input -

-}
updateEnterpriseDefaultRepositoryPermissionSetting : UpdateEnterpriseDefaultRepositoryPermissionSettingRequiredArguments -> SelectionSet decodesTo Github.Object.UpdateEnterpriseDefaultRepositoryPermissionSettingPayload -> SelectionSet (Maybe decodesTo) RootMutation
updateEnterpriseDefaultRepositoryPermissionSetting requiredArgs object_ =
    Object.selectionForCompositeField "updateEnterpriseDefaultRepositoryPermissionSetting" [ Argument.required "input" requiredArgs.input Github.InputObject.encodeUpdateEnterpriseDefaultRepositoryPermissionSettingInput ] object_ (identity >> Decode.nullable)


type alias UpdateEnterpriseMembersCanChangeRepositoryVisibilitySettingRequiredArguments =
    { input : Github.InputObject.UpdateEnterpriseMembersCanChangeRepositoryVisibilitySettingInput }


{-| Sets whether organization members with admin permissions on a repository can change repository visibility.

  - input -

-}
updateEnterpriseMembersCanChangeRepositoryVisibilitySetting : UpdateEnterpriseMembersCanChangeRepositoryVisibilitySettingRequiredArguments -> SelectionSet decodesTo Github.Object.UpdateEnterpriseMembersCanChangeRepositoryVisibilitySettingPayload -> SelectionSet (Maybe decodesTo) RootMutation
updateEnterpriseMembersCanChangeRepositoryVisibilitySetting requiredArgs object_ =
    Object.selectionForCompositeField "updateEnterpriseMembersCanChangeRepositoryVisibilitySetting" [ Argument.required "input" requiredArgs.input Github.InputObject.encodeUpdateEnterpriseMembersCanChangeRepositoryVisibilitySettingInput ] object_ (identity >> Decode.nullable)


type alias UpdateEnterpriseMembersCanCreateRepositoriesSettingRequiredArguments =
    { input : Github.InputObject.UpdateEnterpriseMembersCanCreateRepositoriesSettingInput }


{-| Sets the members can create repositories setting for an enterprise.

  - input -

-}
updateEnterpriseMembersCanCreateRepositoriesSetting : UpdateEnterpriseMembersCanCreateRepositoriesSettingRequiredArguments -> SelectionSet decodesTo Github.Object.UpdateEnterpriseMembersCanCreateRepositoriesSettingPayload -> SelectionSet (Maybe decodesTo) RootMutation
updateEnterpriseMembersCanCreateRepositoriesSetting requiredArgs object_ =
    Object.selectionForCompositeField "updateEnterpriseMembersCanCreateRepositoriesSetting" [ Argument.required "input" requiredArgs.input Github.InputObject.encodeUpdateEnterpriseMembersCanCreateRepositoriesSettingInput ] object_ (identity >> Decode.nullable)


type alias UpdateEnterpriseMembersCanDeleteIssuesSettingRequiredArguments =
    { input : Github.InputObject.UpdateEnterpriseMembersCanDeleteIssuesSettingInput }


{-| Sets the members can delete issues setting for an enterprise.

  - input -

-}
updateEnterpriseMembersCanDeleteIssuesSetting : UpdateEnterpriseMembersCanDeleteIssuesSettingRequiredArguments -> SelectionSet decodesTo Github.Object.UpdateEnterpriseMembersCanDeleteIssuesSettingPayload -> SelectionSet (Maybe decodesTo) RootMutation
updateEnterpriseMembersCanDeleteIssuesSetting requiredArgs object_ =
    Object.selectionForCompositeField "updateEnterpriseMembersCanDeleteIssuesSetting" [ Argument.required "input" requiredArgs.input Github.InputObject.encodeUpdateEnterpriseMembersCanDeleteIssuesSettingInput ] object_ (identity >> Decode.nullable)


type alias UpdateEnterpriseMembersCanDeleteRepositoriesSettingRequiredArguments =
    { input : Github.InputObject.UpdateEnterpriseMembersCanDeleteRepositoriesSettingInput }


{-| Sets the members can delete repositories setting for an enterprise.

  - input -

-}
updateEnterpriseMembersCanDeleteRepositoriesSetting : UpdateEnterpriseMembersCanDeleteRepositoriesSettingRequiredArguments -> SelectionSet decodesTo Github.Object.UpdateEnterpriseMembersCanDeleteRepositoriesSettingPayload -> SelectionSet (Maybe decodesTo) RootMutation
updateEnterpriseMembersCanDeleteRepositoriesSetting requiredArgs object_ =
    Object.selectionForCompositeField "updateEnterpriseMembersCanDeleteRepositoriesSetting" [ Argument.required "input" requiredArgs.input Github.InputObject.encodeUpdateEnterpriseMembersCanDeleteRepositoriesSettingInput ] object_ (identity >> Decode.nullable)


type alias UpdateEnterpriseMembersCanInviteCollaboratorsSettingRequiredArguments =
    { input : Github.InputObject.UpdateEnterpriseMembersCanInviteCollaboratorsSettingInput }


{-| Sets whether members can invite collaborators are enabled for an enterprise.

  - input -

-}
updateEnterpriseMembersCanInviteCollaboratorsSetting : UpdateEnterpriseMembersCanInviteCollaboratorsSettingRequiredArguments -> SelectionSet decodesTo Github.Object.UpdateEnterpriseMembersCanInviteCollaboratorsSettingPayload -> SelectionSet (Maybe decodesTo) RootMutation
updateEnterpriseMembersCanInviteCollaboratorsSetting requiredArgs object_ =
    Object.selectionForCompositeField "updateEnterpriseMembersCanInviteCollaboratorsSetting" [ Argument.required "input" requiredArgs.input Github.InputObject.encodeUpdateEnterpriseMembersCanInviteCollaboratorsSettingInput ] object_ (identity >> Decode.nullable)


type alias UpdateEnterpriseMembersCanMakePurchasesSettingRequiredArguments =
    { input : Github.InputObject.UpdateEnterpriseMembersCanMakePurchasesSettingInput }


{-| Sets whether or not an organization admin can make purchases.

  - input -

-}
updateEnterpriseMembersCanMakePurchasesSetting : UpdateEnterpriseMembersCanMakePurchasesSettingRequiredArguments -> SelectionSet decodesTo Github.Object.UpdateEnterpriseMembersCanMakePurchasesSettingPayload -> SelectionSet (Maybe decodesTo) RootMutation
updateEnterpriseMembersCanMakePurchasesSetting requiredArgs object_ =
    Object.selectionForCompositeField "updateEnterpriseMembersCanMakePurchasesSetting" [ Argument.required "input" requiredArgs.input Github.InputObject.encodeUpdateEnterpriseMembersCanMakePurchasesSettingInput ] object_ (identity >> Decode.nullable)


type alias UpdateEnterpriseMembersCanUpdateProtectedBranchesSettingRequiredArguments =
    { input : Github.InputObject.UpdateEnterpriseMembersCanUpdateProtectedBranchesSettingInput }


{-| Sets the members can update protected branches setting for an enterprise.

  - input -

-}
updateEnterpriseMembersCanUpdateProtectedBranchesSetting : UpdateEnterpriseMembersCanUpdateProtectedBranchesSettingRequiredArguments -> SelectionSet decodesTo Github.Object.UpdateEnterpriseMembersCanUpdateProtectedBranchesSettingPayload -> SelectionSet (Maybe decodesTo) RootMutation
updateEnterpriseMembersCanUpdateProtectedBranchesSetting requiredArgs object_ =
    Object.selectionForCompositeField "updateEnterpriseMembersCanUpdateProtectedBranchesSetting" [ Argument.required "input" requiredArgs.input Github.InputObject.encodeUpdateEnterpriseMembersCanUpdateProtectedBranchesSettingInput ] object_ (identity >> Decode.nullable)


type alias UpdateEnterpriseMembersCanViewDependencyInsightsSettingRequiredArguments =
    { input : Github.InputObject.UpdateEnterpriseMembersCanViewDependencyInsightsSettingInput }


{-| Sets the members can view dependency insights for an enterprise.

  - input -

-}
updateEnterpriseMembersCanViewDependencyInsightsSetting : UpdateEnterpriseMembersCanViewDependencyInsightsSettingRequiredArguments -> SelectionSet decodesTo Github.Object.UpdateEnterpriseMembersCanViewDependencyInsightsSettingPayload -> SelectionSet (Maybe decodesTo) RootMutation
updateEnterpriseMembersCanViewDependencyInsightsSetting requiredArgs object_ =
    Object.selectionForCompositeField "updateEnterpriseMembersCanViewDependencyInsightsSetting" [ Argument.required "input" requiredArgs.input Github.InputObject.encodeUpdateEnterpriseMembersCanViewDependencyInsightsSettingInput ] object_ (identity >> Decode.nullable)


type alias UpdateEnterpriseOrganizationProjectsSettingRequiredArguments =
    { input : Github.InputObject.UpdateEnterpriseOrganizationProjectsSettingInput }


{-| Sets whether organization projects are enabled for an enterprise.

  - input -

-}
updateEnterpriseOrganizationProjectsSetting : UpdateEnterpriseOrganizationProjectsSettingRequiredArguments -> SelectionSet decodesTo Github.Object.UpdateEnterpriseOrganizationProjectsSettingPayload -> SelectionSet (Maybe decodesTo) RootMutation
updateEnterpriseOrganizationProjectsSetting requiredArgs object_ =
    Object.selectionForCompositeField "updateEnterpriseOrganizationProjectsSetting" [ Argument.required "input" requiredArgs.input Github.InputObject.encodeUpdateEnterpriseOrganizationProjectsSettingInput ] object_ (identity >> Decode.nullable)


type alias UpdateEnterpriseProfileRequiredArguments =
    { input : Github.InputObject.UpdateEnterpriseProfileInput }


{-| Updates an enterprise's profile.

  - input -

-}
updateEnterpriseProfile : UpdateEnterpriseProfileRequiredArguments -> SelectionSet decodesTo Github.Object.UpdateEnterpriseProfilePayload -> SelectionSet (Maybe decodesTo) RootMutation
updateEnterpriseProfile requiredArgs object_ =
    Object.selectionForCompositeField "updateEnterpriseProfile" [ Argument.required "input" requiredArgs.input Github.InputObject.encodeUpdateEnterpriseProfileInput ] object_ (identity >> Decode.nullable)


type alias UpdateEnterpriseRepositoryProjectsSettingRequiredArguments =
    { input : Github.InputObject.UpdateEnterpriseRepositoryProjectsSettingInput }


{-| Sets whether repository projects are enabled for a enterprise.

  - input -

-}
updateEnterpriseRepositoryProjectsSetting : UpdateEnterpriseRepositoryProjectsSettingRequiredArguments -> SelectionSet decodesTo Github.Object.UpdateEnterpriseRepositoryProjectsSettingPayload -> SelectionSet (Maybe decodesTo) RootMutation
updateEnterpriseRepositoryProjectsSetting requiredArgs object_ =
    Object.selectionForCompositeField "updateEnterpriseRepositoryProjectsSetting" [ Argument.required "input" requiredArgs.input Github.InputObject.encodeUpdateEnterpriseRepositoryProjectsSettingInput ] object_ (identity >> Decode.nullable)


type alias UpdateEnterpriseTeamDiscussionsSettingRequiredArguments =
    { input : Github.InputObject.UpdateEnterpriseTeamDiscussionsSettingInput }


{-| Sets whether team discussions are enabled for an enterprise.

  - input -

-}
updateEnterpriseTeamDiscussionsSetting : UpdateEnterpriseTeamDiscussionsSettingRequiredArguments -> SelectionSet decodesTo Github.Object.UpdateEnterpriseTeamDiscussionsSettingPayload -> SelectionSet (Maybe decodesTo) RootMutation
updateEnterpriseTeamDiscussionsSetting requiredArgs object_ =
    Object.selectionForCompositeField "updateEnterpriseTeamDiscussionsSetting" [ Argument.required "input" requiredArgs.input Github.InputObject.encodeUpdateEnterpriseTeamDiscussionsSettingInput ] object_ (identity >> Decode.nullable)


type alias UpdateEnterpriseTwoFactorAuthenticationRequiredSettingRequiredArguments =
    { input : Github.InputObject.UpdateEnterpriseTwoFactorAuthenticationRequiredSettingInput }


{-| Sets whether two factor authentication is required for all users in an enterprise.

  - input -

-}
updateEnterpriseTwoFactorAuthenticationRequiredSetting : UpdateEnterpriseTwoFactorAuthenticationRequiredSettingRequiredArguments -> SelectionSet decodesTo Github.Object.UpdateEnterpriseTwoFactorAuthenticationRequiredSettingPayload -> SelectionSet (Maybe decodesTo) RootMutation
updateEnterpriseTwoFactorAuthenticationRequiredSetting requiredArgs object_ =
    Object.selectionForCompositeField "updateEnterpriseTwoFactorAuthenticationRequiredSetting" [ Argument.required "input" requiredArgs.input Github.InputObject.encodeUpdateEnterpriseTwoFactorAuthenticationRequiredSettingInput ] object_ (identity >> Decode.nullable)


type alias UpdateIssueRequiredArguments =
    { input : Github.InputObject.UpdateIssueInput }


{-| Updates an Issue.

  - input -

-}
updateIssue : UpdateIssueRequiredArguments -> SelectionSet decodesTo Github.Object.UpdateIssuePayload -> SelectionSet (Maybe decodesTo) RootMutation
updateIssue requiredArgs object_ =
    Object.selectionForCompositeField "updateIssue" [ Argument.required "input" requiredArgs.input Github.InputObject.encodeUpdateIssueInput ] object_ (identity >> Decode.nullable)


type alias UpdateIssueCommentRequiredArguments =
    { input : Github.InputObject.UpdateIssueCommentInput }


{-| Updates an IssueComment object.

  - input -

-}
updateIssueComment : UpdateIssueCommentRequiredArguments -> SelectionSet decodesTo Github.Object.UpdateIssueCommentPayload -> SelectionSet (Maybe decodesTo) RootMutation
updateIssueComment requiredArgs object_ =
    Object.selectionForCompositeField "updateIssueComment" [ Argument.required "input" requiredArgs.input Github.InputObject.encodeUpdateIssueCommentInput ] object_ (identity >> Decode.nullable)


type alias UpdateProjectRequiredArguments =
    { input : Github.InputObject.UpdateProjectInput }


{-| Updates an existing project.

  - input -

-}
updateProject : UpdateProjectRequiredArguments -> SelectionSet decodesTo Github.Object.UpdateProjectPayload -> SelectionSet (Maybe decodesTo) RootMutation
updateProject requiredArgs object_ =
    Object.selectionForCompositeField "updateProject" [ Argument.required "input" requiredArgs.input Github.InputObject.encodeUpdateProjectInput ] object_ (identity >> Decode.nullable)


type alias UpdateProjectCardRequiredArguments =
    { input : Github.InputObject.UpdateProjectCardInput }


{-| Updates an existing project card.

  - input -

-}
updateProjectCard : UpdateProjectCardRequiredArguments -> SelectionSet decodesTo Github.Object.UpdateProjectCardPayload -> SelectionSet (Maybe decodesTo) RootMutation
updateProjectCard requiredArgs object_ =
    Object.selectionForCompositeField "updateProjectCard" [ Argument.required "input" requiredArgs.input Github.InputObject.encodeUpdateProjectCardInput ] object_ (identity >> Decode.nullable)


type alias UpdateProjectColumnRequiredArguments =
    { input : Github.InputObject.UpdateProjectColumnInput }


{-| Updates an existing project column.

  - input -

-}
updateProjectColumn : UpdateProjectColumnRequiredArguments -> SelectionSet decodesTo Github.Object.UpdateProjectColumnPayload -> SelectionSet (Maybe decodesTo) RootMutation
updateProjectColumn requiredArgs object_ =
    Object.selectionForCompositeField "updateProjectColumn" [ Argument.required "input" requiredArgs.input Github.InputObject.encodeUpdateProjectColumnInput ] object_ (identity >> Decode.nullable)


type alias UpdatePullRequestRequiredArguments =
    { input : Github.InputObject.UpdatePullRequestInput }


{-| Update a pull request

  - input -

-}
updatePullRequest : UpdatePullRequestRequiredArguments -> SelectionSet decodesTo Github.Object.UpdatePullRequestPayload -> SelectionSet (Maybe decodesTo) RootMutation
updatePullRequest requiredArgs object_ =
    Object.selectionForCompositeField "updatePullRequest" [ Argument.required "input" requiredArgs.input Github.InputObject.encodeUpdatePullRequestInput ] object_ (identity >> Decode.nullable)


type alias UpdatePullRequestReviewRequiredArguments =
    { input : Github.InputObject.UpdatePullRequestReviewInput }


{-| Updates the body of a pull request review.

  - input -

-}
updatePullRequestReview : UpdatePullRequestReviewRequiredArguments -> SelectionSet decodesTo Github.Object.UpdatePullRequestReviewPayload -> SelectionSet (Maybe decodesTo) RootMutation
updatePullRequestReview requiredArgs object_ =
    Object.selectionForCompositeField "updatePullRequestReview" [ Argument.required "input" requiredArgs.input Github.InputObject.encodeUpdatePullRequestReviewInput ] object_ (identity >> Decode.nullable)


type alias UpdatePullRequestReviewCommentRequiredArguments =
    { input : Github.InputObject.UpdatePullRequestReviewCommentInput }


{-| Updates a pull request review comment.

  - input -

-}
updatePullRequestReviewComment : UpdatePullRequestReviewCommentRequiredArguments -> SelectionSet decodesTo Github.Object.UpdatePullRequestReviewCommentPayload -> SelectionSet (Maybe decodesTo) RootMutation
updatePullRequestReviewComment requiredArgs object_ =
    Object.selectionForCompositeField "updatePullRequestReviewComment" [ Argument.required "input" requiredArgs.input Github.InputObject.encodeUpdatePullRequestReviewCommentInput ] object_ (identity >> Decode.nullable)


type alias UpdateRefRequiredArguments =
    { input : Github.InputObject.UpdateRefInput }


{-| Update a Git Ref.

  - input -

-}
updateRef : UpdateRefRequiredArguments -> SelectionSet decodesTo Github.Object.UpdateRefPayload -> SelectionSet (Maybe decodesTo) RootMutation
updateRef requiredArgs object_ =
    Object.selectionForCompositeField "updateRef" [ Argument.required "input" requiredArgs.input Github.InputObject.encodeUpdateRefInput ] object_ (identity >> Decode.nullable)


type alias UpdateRepositoryRequiredArguments =
    { input : Github.InputObject.UpdateRepositoryInput }


{-| Update information about a repository.

  - input -

-}
updateRepository : UpdateRepositoryRequiredArguments -> SelectionSet decodesTo Github.Object.UpdateRepositoryPayload -> SelectionSet (Maybe decodesTo) RootMutation
updateRepository requiredArgs object_ =
    Object.selectionForCompositeField "updateRepository" [ Argument.required "input" requiredArgs.input Github.InputObject.encodeUpdateRepositoryInput ] object_ (identity >> Decode.nullable)


type alias UpdateSubscriptionRequiredArguments =
    { input : Github.InputObject.UpdateSubscriptionInput }


{-| Updates the state for subscribable subjects.

  - input -

-}
updateSubscription : UpdateSubscriptionRequiredArguments -> SelectionSet decodesTo Github.Object.UpdateSubscriptionPayload -> SelectionSet (Maybe decodesTo) RootMutation
updateSubscription requiredArgs object_ =
    Object.selectionForCompositeField "updateSubscription" [ Argument.required "input" requiredArgs.input Github.InputObject.encodeUpdateSubscriptionInput ] object_ (identity >> Decode.nullable)


type alias UpdateTeamDiscussionRequiredArguments =
    { input : Github.InputObject.UpdateTeamDiscussionInput }


{-| Updates a team discussion.

  - input -

-}
updateTeamDiscussion : UpdateTeamDiscussionRequiredArguments -> SelectionSet decodesTo Github.Object.UpdateTeamDiscussionPayload -> SelectionSet (Maybe decodesTo) RootMutation
updateTeamDiscussion requiredArgs object_ =
    Object.selectionForCompositeField "updateTeamDiscussion" [ Argument.required "input" requiredArgs.input Github.InputObject.encodeUpdateTeamDiscussionInput ] object_ (identity >> Decode.nullable)


type alias UpdateTeamDiscussionCommentRequiredArguments =
    { input : Github.InputObject.UpdateTeamDiscussionCommentInput }


{-| Updates a discussion comment.

  - input -

-}
updateTeamDiscussionComment : UpdateTeamDiscussionCommentRequiredArguments -> SelectionSet decodesTo Github.Object.UpdateTeamDiscussionCommentPayload -> SelectionSet (Maybe decodesTo) RootMutation
updateTeamDiscussionComment requiredArgs object_ =
    Object.selectionForCompositeField "updateTeamDiscussionComment" [ Argument.required "input" requiredArgs.input Github.InputObject.encodeUpdateTeamDiscussionCommentInput ] object_ (identity >> Decode.nullable)


type alias UpdateTopicsRequiredArguments =
    { input : Github.InputObject.UpdateTopicsInput }


{-| Replaces the repository's topics with the given topics.

  - input -

-}
updateTopics : UpdateTopicsRequiredArguments -> SelectionSet decodesTo Github.Object.UpdateTopicsPayload -> SelectionSet (Maybe decodesTo) RootMutation
updateTopics requiredArgs object_ =
    Object.selectionForCompositeField "updateTopics" [ Argument.required "input" requiredArgs.input Github.InputObject.encodeUpdateTopicsInput ] object_ (identity >> Decode.nullable)
